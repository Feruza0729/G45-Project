2025-01-21 13:14:00 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 323407 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:14:00 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:14:00 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:14:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 8 JPA repository interfaces.
2025-01-21 13:14:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:14:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:14:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 13:14:01 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:14:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:14:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:14:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:14:01 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:14:01 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1608 ms
2025-01-21 13:14:02 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:14:02 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:14:02 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:14:02 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:14:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:14:05 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3453f79c
2025-01-21 13:14:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:14:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:14:06 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:14:08 [main] DEBUG org.hibernate.SQL - 
    create table basket (
        id bigserial not null,
        user_id bigint,
        primary key (id)
    )
2025-01-21 13:14:08 [main] DEBUG org.hibernate.SQL - 
    create table basket_item (
        id bigserial not null,
        item_id bigint,
        price float(53) not null,
        quantity integer not null,
        type varchar(255) check (type in ('DOOR','ACCESSORY')),
        basket_id bigint,
        primary key (id)
    )
2025-01-21 13:14:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       drop constraint if exists UK_3nnxr5aak5yc79vn6ws9gcw4t
2025-01-21 13:14:09 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-01-21 13:14:09 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "uk_3nnxr5aak5yc79vn6ws9gcw4t" of relation "basket" does not exist, skipping
2025-01-21 13:14:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       add constraint UK_3nnxr5aak5yc79vn6ws9gcw4t unique (user_id)
2025-01-21 13:14:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       add constraint FK810a8gq30miyp6j1eub97qm6k 
       foreign key (user_id) 
       references users
2025-01-21 13:14:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       add constraint FKara19f2xv7ml3a24f50v6bsk2 
       foreign key (basket_id) 
       references basket
2025-01-21 13:14:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:14:22 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:14:24 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:14:24 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:14:24 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:14:25 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:14:25 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:14:25 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:14:25 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@65e4e3c0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d3434ce, org.springframework.security.web.context.SecurityContextHolderFilter@49099a11, org.springframework.security.web.header.HeaderWriterFilter@355e10d7, org.springframework.web.filter.CorsFilter@5ce714be, org.springframework.security.web.authentication.logout.LogoutFilter@3427fb95, uz.pdp.config.filtr.MyFilter@f5167f0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5fe5521d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@174f796d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b1a218b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56a6a3bd, org.springframework.security.web.access.ExceptionTranslationFilter@1e1b512e, org.springframework.security.web.access.intercept.AuthorizationFilter@45154661]
2025-01-21 13:14:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:14:26 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 26.364 seconds (process running for 26.698)
2025-01-21 13:14:26 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:14:26 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:14:27 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:14:27 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:14:27 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 13:14:50 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 468 ms
2025-01-21 13:15:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:15:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:15:27 [http-nio-8080-exec-9] INFO  uz.pdp.controller.AuthController - Processing registration request for user: string
2025-01-21 13:15:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id)>0 
    from
        users u1_0 
    where
        u1_0.name=?
2025-01-21 13:15:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id)>0 
    from
        users u1_0 
    where
        u1_0.email=?
2025-01-21 13:15:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 13:15:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:15:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:15:40 [http-nio-8080-exec-1] INFO  uz.pdp.controller.AuthController - Processing registration request for user: string
2025-01-21 13:15:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id)>0 
    from
        users u1_0 
    where
        u1_0.name=?
2025-01-21 13:15:40 [http-nio-8080-exec-1] ERROR uz.pdp.service.AuthService - Registration validation error: An account with this username already exists
2025-01-21 13:15:40 [http-nio-8080-exec-1] ERROR uz.pdp.controller.AuthController - Username is taken: An account with this username already exists
2025-01-21 13:15:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:15:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:15:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:15:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    where
        b1_0.user_id=?
2025-01-21 13:15:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket
        (user_id) 
    values
        (?)
2025-01-21 13:15:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 13:15:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, item_id, price, quantity, type) 
    values
        (?, ?, ?, ?, ?)
2025-01-21 13:15:47 [http-nio-8080-exec-3] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:492)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"]->uz.pdp.entity.Basket["items"]->org.hibernate.collection.spi.PersistentBag[0]->uz.pdp.entity.BasketItem["basket"])
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:787)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
Caused by: java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2025-01-21 13:18:06 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:18:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:18:07 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:18:10 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 339430 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:18:10 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:18:10 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:18:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:18:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:18:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 8 JPA repository interfaces.
2025-01-21 13:18:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:18:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:18:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 13:18:11 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:18:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:18:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:18:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:18:11 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:18:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1434 ms
2025-01-21 13:18:12 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:18:12 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:18:12 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:18:12 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:18:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:18:14 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@640028f2
2025-01-21 13:18:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:18:15 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:18:16 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:18:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:18:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:18:33 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:18:33 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:18:33 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:18:33 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:18:34 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:18:34 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:18:34 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4de66814, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ea716a4, org.springframework.security.web.context.SecurityContextHolderFilter@34f3153a, org.springframework.security.web.header.HeaderWriterFilter@625071dc, org.springframework.web.filter.CorsFilter@7cfa39d0, org.springframework.security.web.authentication.logout.LogoutFilter@73cb6541, uz.pdp.config.filtr.MyFilter@79bf39e5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6948f680, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6773cb0e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@56a6a3bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4443ef5f, org.springframework.security.web.access.ExceptionTranslationFilter@7322fbb3, org.springframework.security.web.access.intercept.AuthorizationFilter@6d9a0566]
2025-01-21 13:18:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:18:35 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.06 seconds (process running for 25.396)
2025-01-21 13:18:35 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:18:35 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:18:36 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:18:36 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:18:36 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 13:18:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:18:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:18:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:18:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    where
        b1_0.user_id=?
2025-01-21 13:18:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 13:18:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        basket_item 
    set
        basket_id=?,
        item_id=?,
        price=?,
        quantity=?,
        type=? 
    where
        id=?
2025-01-21 13:20:12 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:20:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:20:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:26:06 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 370105 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:26:06 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:26:06 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:26:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:26:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:26:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85 ms. Found 8 JPA repository interfaces.
2025-01-21 13:26:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:26:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:26:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-01-21 13:26:08 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:26:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:26:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:26:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:26:08 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:26:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1575 ms
2025-01-21 13:26:08 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:26:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:26:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:26:09 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:26:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:26:11 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e572b08
2025-01-21 13:26:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:26:12 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:26:13 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:26:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:26:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:26:32 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'furnitureDoorController': Resolution of declared constructors on bean Class [uz.pdp.controller.FurnitureDoorController] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@1dbd16a6] failed
2025-01-21 13:26:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:26:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:26:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:26:33 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-01-21 13:26:33 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-01-21 13:26:33 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'furnitureDoorController': Resolution of declared constructors on bean Class [uz.pdp.controller.FurnitureDoorController] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@1dbd16a6] failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:383)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1293)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at uz.pdp.projectmodul10.ProjectModul10Application.main(ProjectModul10Application.java:56)
Caused by: java.lang.NoClassDefFoundError: FurnitureDoorService
	at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3373)
	at java.base/java.lang.Class.getDeclaredConstructors(Class.java:2555)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:378)
	... 18 common frames omitted
Caused by: java.lang.ClassNotFoundException: FurnitureDoorService
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	... 22 common frames omitted
2025-01-21 13:27:27 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 375569 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:27:27 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:27:27 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:27:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:27:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:27:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 8 JPA repository interfaces.
2025-01-21 13:27:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:27:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:27:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 13:27:28 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:27:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:27:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:27:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:27:28 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:27:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1358 ms
2025-01-21 13:27:29 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:27:29 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:27:29 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:27:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:27:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:27:31 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39c93af6
2025-01-21 13:27:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:27:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:27:33 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:27:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:27:49 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:27:50 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:27:51 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:27:51 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:27:51 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:27:51 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:27:51 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:27:51 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@760e84b0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40e5536d, org.springframework.security.web.context.SecurityContextHolderFilter@55dc8d6c, org.springframework.security.web.header.HeaderWriterFilter@1852cea2, org.springframework.web.filter.CorsFilter@6b726b51, org.springframework.security.web.authentication.logout.LogoutFilter@159e6d3, uz.pdp.config.filtr.MyFilter@da67c46, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@79d92b35, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f55020e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7376f510, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@dd98967, org.springframework.security.web.access.ExceptionTranslationFilter@26daadd, org.springframework.security.web.access.intercept.AuthorizationFilter@77c658f1]
2025-01-21 13:27:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:27:52 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.543 seconds (process running for 25.843)
2025-01-21 13:27:52 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:27:53 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:27:54 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:27:54 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:27:54 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 13:28:14 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 457 ms
2025-01-21 13:28:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:28:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:28:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:28:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:28:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending,
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    left join
        basket_item i1_0 
            on b1_0.id=i1_0.basket_id 
    where
        b1_0.id=?
2025-01-21 13:28:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        basket 
    set
        user_id=? 
    where
        id=?
2025-01-21 13:28:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 13:29:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:29:27 [http-nio-8080-exec-5] INFO  uz.pdp.controller.DoorController - Fetching doors page 0 with size 20
2025-01-21 13:29:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-01-21 13:29:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(d1_0.id) 
    from
        doors d1_0
2025-01-21 13:29:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:29:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 13:32:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:32:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:32:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:32:27 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 394253 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:32:27 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:32:27 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:32:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:32:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:32:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 8 JPA repository interfaces.
2025-01-21 13:32:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:32:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:32:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-01-21 13:32:28 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:32:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:32:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:32:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:32:28 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:32:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1530 ms
2025-01-21 13:32:28 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:32:29 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:32:29 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:32:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:32:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:32:32 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6908674b
2025-01-21 13:32:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:32:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:32:33 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:32:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:32:50 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:32:52 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:32:52 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:32:52 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:32:53 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:32:53 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:32:53 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:32:53 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@191eb2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b893208, org.springframework.security.web.context.SecurityContextHolderFilter@9fe306, org.springframework.security.web.header.HeaderWriterFilter@174f796d, org.springframework.web.filter.CorsFilter@5aba9e8a, org.springframework.security.web.authentication.logout.LogoutFilter@6b469ad0, uz.pdp.config.filtr.MyFilter@5870fc05, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6a8376bf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7808bbdb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@436219ba, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6523a69a, org.springframework.security.web.access.ExceptionTranslationFilter@55dc8d6c, org.springframework.security.web.access.intercept.AuthorizationFilter@6b726b51]
2025-01-21 13:32:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:32:54 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 27.495 seconds (process running for 27.812)
2025-01-21 13:32:54 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:32:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:32:55 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:32:55 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:32:55 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 13:34:11 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:34:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:34:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:34:15 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 401535 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:34:15 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:34:15 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:34:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:34:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:34:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 8 JPA repository interfaces.
2025-01-21 13:34:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:34:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:34:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 13:34:16 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:34:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:34:16 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:34:16 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:34:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:34:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1442 ms
2025-01-21 13:34:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:34:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:34:17 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:34:17 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:34:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:34:20 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39c93af6
2025-01-21 13:34:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:34:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:34:21 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:34:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:34:36 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:34:38 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:34:39 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:34:39 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:34:39 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:34:39 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:34:39 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:34:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@653b17be, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ff369a7, org.springframework.security.web.context.SecurityContextHolderFilter@7c343e15, org.springframework.security.web.header.HeaderWriterFilter@20d4e50d, org.springframework.web.filter.CorsFilter@34c43638, org.springframework.security.web.authentication.logout.LogoutFilter@34d2e58d, uz.pdp.config.filtr.MyFilter@da67c46, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6b726b51, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e26bb75, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4883af87, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55fd5bae, org.springframework.security.web.access.ExceptionTranslationFilter@75a000d8, org.springframework.security.web.access.intercept.AuthorizationFilter@1eee1b2b]
2025-01-21 13:34:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:34:40 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.133 seconds (process running for 25.446)
2025-01-21 13:34:40 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:34:40 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:34:41 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:34:41 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:34:41 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 13:34:56 [http-nio-8080-exec-10] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 472 ms
2025-01-21 13:35:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:35:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:35:23 [http-nio-8080-exec-9] INFO  uz.pdp.controller.AuthController - Processing login request for user: string
2025-01-21 13:35:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:35:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:35:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:35:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:37:29 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:37:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:37:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:37:33 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 414104 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:37:33 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:37:33 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:37:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:37:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:37:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 8 JPA repository interfaces.
2025-01-21 13:37:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:37:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:37:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 13:37:34 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:37:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:37:35 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:37:35 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:37:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:37:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1472 ms
2025-01-21 13:37:35 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:37:35 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:37:35 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:37:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:37:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:37:38 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@288e50c1
2025-01-21 13:37:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:37:38 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:37:39 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:37:54 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:37:54 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:37:56 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:37:56 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:37:56 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:37:56 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:37:57 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:37:57 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:37:57 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6523a69a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d87d802, org.springframework.security.web.context.SecurityContextHolderFilter@45012a91, org.springframework.security.web.header.HeaderWriterFilter@66140c8b, org.springframework.web.filter.CorsFilter@6fdca6c8, org.springframework.security.web.authentication.logout.LogoutFilter@4d320bb8, uz.pdp.config.filtr.MyFilter@7d0df326, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@20054016, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14691ed4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15ea267, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@619c3b77, org.springframework.security.web.access.ExceptionTranslationFilter@8c9b3cf, org.springframework.security.web.access.intercept.AuthorizationFilter@149eb04a]
2025-01-21 13:37:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:37:58 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.003 seconds (process running for 25.358)
2025-01-21 13:37:58 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:37:59 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:37:59 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:37:59 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:37:59 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 13:38:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:38:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:38:19 [http-nio-8080-exec-10] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 475 ms
2025-01-21 13:40:39 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:40:39 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:40:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:40:43 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 426564 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:40:43 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:40:43 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:40:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:40:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:40:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 8 JPA repository interfaces.
2025-01-21 13:40:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:40:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:40:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 13:40:44 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:40:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:40:44 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:40:44 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:40:44 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:40:44 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1485 ms
2025-01-21 13:40:45 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:40:45 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:40:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:40:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:40:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:40:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a3e458
2025-01-21 13:40:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:40:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:40:49 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:41:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:41:05 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:41:06 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:41:06 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:41:07 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:41:07 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:41:07 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:41:07 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:41:07 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@255bd2eb, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b055bbd, org.springframework.security.web.context.SecurityContextHolderFilter@f55020e, org.springframework.security.web.header.HeaderWriterFilter@5d0e31f8, org.springframework.web.filter.CorsFilter@653b17be, org.springframework.security.web.authentication.logout.LogoutFilter@72a71e69, uz.pdp.config.filtr.MyFilter@45e35a0d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@760e84b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47b4de76, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b9ef38e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4ff369a7, org.springframework.security.web.access.ExceptionTranslationFilter@1276a877, org.springframework.security.web.access.intercept.AuthorizationFilter@5b8e4980]
2025-01-21 13:41:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:41:08 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.591 seconds (process running for 25.944)
2025-01-21 13:41:08 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:41:09 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:41:09 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:41:09 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 13:41:09 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:41:10 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 541 ms
2025-01-21 13:41:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:41:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:41:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending,
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    left join
        basket_item i1_0 
            on b1_0.id=i1_0.basket_id 
    where
        b1_0.id=?
2025-01-21 13:41:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 13:41:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, item_id, price, quantity, type) 
    values
        (?, ?, ?, ?, ?)
2025-01-21 13:41:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:41:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:41:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending,
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    left join
        basket_item i1_0 
            on b1_0.id=i1_0.basket_id 
    where
        b1_0.id=?
2025-01-21 13:41:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 13:43:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:43:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:43:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:44:15 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 440009 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:44:15 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:44:15 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:44:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:44:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:44:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 8 JPA repository interfaces.
2025-01-21 13:44:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:44:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:44:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 13:44:16 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:44:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:44:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:44:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:44:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:44:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1523 ms
2025-01-21 13:44:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:44:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:44:17 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:44:17 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:44:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:44:20 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41962299
2025-01-21 13:44:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:44:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:44:21 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:44:37 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:44:37 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:44:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:44:39 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:44:39 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:44:39 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:44:40 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:44:40 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:44:40 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@79ca554f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ad7c4c7, org.springframework.security.web.context.SecurityContextHolderFilter@1d2bd796, org.springframework.security.web.header.HeaderWriterFilter@34f3153a, org.springframework.web.filter.CorsFilter@894591b, org.springframework.security.web.authentication.logout.LogoutFilter@2ec0e732, uz.pdp.config.filtr.MyFilter@4eec5fa6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3c8faaca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@658a2041, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@520021aa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@151899dd, org.springframework.security.web.access.ExceptionTranslationFilter@625071dc, org.springframework.security.web.access.intercept.AuthorizationFilter@69b1e76b]
2025-01-21 13:44:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:44:41 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.657 seconds (process running for 25.99)
2025-01-21 13:44:41 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:44:41 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:44:42 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:44:42 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:44:42 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 13:44:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:44:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.email=? 
        and u1_0.active=true
2025-01-21 13:44:49 [http-nio-8080-exec-1] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
java.lang.IllegalStateException: User not found: string
	at uz.pdp.service.BasketService.lambda$getCurrentUser$0(BasketService.java:41)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at uz.pdp.service.BasketService.getCurrentUser(BasketService.java:41)
	at uz.pdp.service.BasketService.getBasket(BasketService.java:51)
	at uz.pdp.service.BasketService.addItem(BasketService.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.addItem(<generated>)
	at uz.pdp.controller.AccessoryController.addToBasket(AccessoryController.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.AccessoryController$$SpringCGLIB$$0.addToBasket(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-01-21 13:44:53 [http-nio-8080-exec-10] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 588 ms
2025-01-21 13:45:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:45:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.email=? 
        and u1_0.active=true
2025-01-21 13:45:01 [http-nio-8080-exec-7] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
java.lang.IllegalStateException: User not found: string
	at uz.pdp.service.BasketService.lambda$getCurrentUser$0(BasketService.java:41)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at uz.pdp.service.BasketService.getCurrentUser(BasketService.java:41)
	at uz.pdp.service.BasketService.getBasket(BasketService.java:51)
	at uz.pdp.service.BasketService.addItem(BasketService.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.addItem(<generated>)
	at uz.pdp.controller.AccessoryController.addToBasket(AccessoryController.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.AccessoryController$$SpringCGLIB$$0.addToBasket(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-01-21 13:47:02 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:47:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:47:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:47:06 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 446968 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:47:06 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:47:06 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:47:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:47:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:47:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 8 JPA repository interfaces.
2025-01-21 13:47:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:47:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:47:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 13:47:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:47:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:47:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:47:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:47:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:47:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1520 ms
2025-01-21 13:47:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:47:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:47:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:47:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:47:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:47:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41962299
2025-01-21 13:47:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:47:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:47:12 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:47:27 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:47:28 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:47:29 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:47:30 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:47:30 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:47:30 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:47:30 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:47:30 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:47:30 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15a4a198, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16576bcf, org.springframework.security.web.context.SecurityContextHolderFilter@12c2e362, org.springframework.security.web.header.HeaderWriterFilter@a32d045, org.springframework.web.filter.CorsFilter@4a037aab, org.springframework.security.web.authentication.logout.LogoutFilter@580a7e0, uz.pdp.config.filtr.MyFilter@3aed692d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1d563a95, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67e8d6ab, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54429a99, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16c04281, org.springframework.security.web.access.ExceptionTranslationFilter@6f7d893e, org.springframework.security.web.access.intercept.AuthorizationFilter@6b6090d4]
2025-01-21 13:47:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:47:31 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.672 seconds (process running for 26.043)
2025-01-21 13:47:31 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:47:32 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:47:32 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:47:32 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:47:32 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 13:49:44 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:49:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:49:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:49:49 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 456014 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:49:49 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:49:49 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:49:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:49:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:49:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 8 JPA repository interfaces.
2025-01-21 13:49:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:49:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:49:50 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-01-21 13:49:50 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:49:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:49:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:49:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:49:50 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:49:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1695 ms
2025-01-21 13:49:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:49:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:49:51 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:49:51 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:49:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:49:53 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e572b08
2025-01-21 13:49:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:49:54 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:49:55 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:50:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:50:11 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:50:12 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:50:12 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:50:13 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:50:13 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:50:13 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:50:13 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:50:13 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f5c9316, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47bd62db, org.springframework.security.web.context.SecurityContextHolderFilter@759bcd7d, org.springframework.security.web.header.HeaderWriterFilter@19f4aaf, org.springframework.web.filter.CorsFilter@4083443e, org.springframework.security.web.authentication.logout.LogoutFilter@328cb829, uz.pdp.config.filtr.MyFilter@74cd8c55, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@46d2c993, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@518cd29, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@82272c4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@52b1bd76, org.springframework.security.web.access.ExceptionTranslationFilter@2712d8e4, org.springframework.security.web.access.intercept.AuthorizationFilter@66bd7737]
2025-01-21 13:50:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:50:14 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.708 seconds (process running for 26.065)
2025-01-21 13:50:14 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:50:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:50:15 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:50:15 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:50:15 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 13:50:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:50:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:50:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:50:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket
        (user_id) 
    values
        (?)
2025-01-21 13:50:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 13:50:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, item_id, price, quantity, type) 
    values
        (?, ?, ?, ?, ?)
2025-01-21 13:50:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:50:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:50:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:50:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 13:50:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:50:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:50:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:50:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 13:50:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 13:50:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        basket_item 
    set
        basket_id=?,
        item_id=?,
        price=?,
        quantity=?,
        type=? 
    where
        id=?
2025-01-21 13:51:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:51:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:51:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:51:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 13:51:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 13:51:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        basket_item 
    set
        basket_id=?,
        item_id=?,
        price=?,
        quantity=?,
        type=? 
    where
        id=?
2025-01-21 13:51:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:51:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:51:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:51:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 13:51:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 13:51:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        basket_item 
    set
        basket_id=?,
        item_id=?,
        price=?,
        quantity=?,
        type=? 
    where
        id=?
2025-01-21 13:51:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:51:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:51:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:51:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 13:51:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:53:36 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:53:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:53:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 13:53:59 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 466980 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 13:53:59 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 13:53:59 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 13:54:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:54:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 13:54:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 8 JPA repository interfaces.
2025-01-21 13:54:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 13:54:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 13:54:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-01-21 13:54:00 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 13:54:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 13:54:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 13:54:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 13:54:01 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 13:54:01 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1707 ms
2025-01-21 13:54:01 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 13:54:01 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 13:54:01 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 13:54:01 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 13:54:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 13:54:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5e572b08
2025-01-21 13:54:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 13:54:04 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 13:54:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 13:54:21 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:54:21 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 13:54:23 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 13:54:23 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 13:54:23 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 13:54:23 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 13:54:24 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 13:54:24 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 13:54:24 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@727a3881, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3aed0f81, org.springframework.security.web.context.SecurityContextHolderFilter@170a4328, org.springframework.security.web.header.HeaderWriterFilter@5b8e4980, org.springframework.web.filter.CorsFilter@16116014, org.springframework.security.web.authentication.logout.LogoutFilter@140dd8ce, uz.pdp.config.filtr.MyFilter@74cd8c55, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7cfa39d0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4c96d71f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fceeea3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79ca554f, org.springframework.security.web.access.ExceptionTranslationFilter@190ed278, org.springframework.security.web.access.intercept.AuthorizationFilter@83718d]
2025-01-21 13:54:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 13:54:25 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.944 seconds (process running for 26.358)
2025-01-21 13:54:25 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 13:54:26 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:54:26 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 13:54:26 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 13:54:26 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 13:55:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:55:27 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 13:55:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 13:55:28 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Rustic Aerodynamic Mahogany Door
2025-01-21 13:55:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 13:55:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 13:55:28 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 13:55:28 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Rustic Aerodynamic Mahogany Door
2025-01-21 13:55:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.item_id,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 13:55:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, item_id, price, quantity, type) 
    values
        (?, ?, ?, ?, ?)
2025-01-21 13:56:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 13:56:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 13:56:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:05:05 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 508833 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:05:05 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:05:05 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:05:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:05:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:05:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93 ms. Found 8 JPA repository interfaces.
2025-01-21 14:05:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:05:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:05:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 14:05:06 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:05:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:05:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:05:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:05:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:05:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1584 ms
2025-01-21 14:05:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:05:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:05:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:05:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:05:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:05:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@363ee411
2025-01-21 14:05:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:05:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:05:11 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:05:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       add column image varchar(255)
2025-01-21 14:05:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       add column name varchar(255)
2025-01-21 14:05:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       add column furniture_door_id bigint not null
2025-01-21 14:05:14 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists furniture_door_images 
       add column furniture_door_id bigint not null" via JDBC [ERROR: column "furniture_door_id" of relation "furniture_door_images" contains null values]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists furniture_door_images 
       add column furniture_door_id bigint not null" via JDBC [ERROR: column "furniture_door_id" of relation "furniture_door_images" contains null values]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1232)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at uz.pdp.projectmodul10.ProjectModul10Application.main(ProjectModul10Application.java:56)
Caused by: org.postgresql.util.PSQLException: ERROR: column "furniture_door_id" of relation "furniture_door_images" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-01-21 14:05:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       add constraint FKtncfqos5bn3jhhxs9m55tsgjk 
       foreign key (furniture_door_id) 
       references furniture_doors
2025-01-21 14:05:28 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists furniture_door_images 
       add constraint FKtncfqos5bn3jhhxs9m55tsgjk 
       foreign key (furniture_door_id) 
       references furniture_doors" via JDBC [ERROR: column "furniture_door_id" referenced in foreign key constraint does not exist]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists furniture_door_images 
       add constraint FKtncfqos5bn3jhhxs9m55tsgjk 
       foreign key (furniture_door_id) 
       references furniture_doors" via JDBC [ERROR: column "furniture_door_id" referenced in foreign key constraint does not exist]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:446)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:268)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1232)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at uz.pdp.projectmodul10.ProjectModul10Application.main(ProjectModul10Application.java:56)
Caused by: org.postgresql.util.PSQLException: ERROR: column "furniture_door_id" referenced in foreign key constraint does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 37 common frames omitted
2025-01-21 14:05:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:05:30 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:05:31 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:05:32 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:05:32 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:05:32 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:05:32 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:05:32 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:05:32 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@74f9f6e0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c060ac0, org.springframework.security.web.context.SecurityContextHolderFilter@34c43638, org.springframework.security.web.header.HeaderWriterFilter@35da72fa, org.springframework.web.filter.CorsFilter@1bee64ef, org.springframework.security.web.authentication.logout.LogoutFilter@545d9128, uz.pdp.config.filtr.MyFilter@7e514482, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1f4f299, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@674346bc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6523a69a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c8cf92b, org.springframework.security.web.access.ExceptionTranslationFilter@61a6ac8a, org.springframework.security.web.access.intercept.AuthorizationFilter@3ea716a4]
2025-01-21 14:05:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:05:33 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 28.446 seconds (process running for 28.817)
2025-01-21 14:05:33 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:05:34 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:05:35 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:05:35 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:05:35 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 14:05:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:05:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:05:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:05:54 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 511697 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:05:54 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:05:54 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:05:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:05:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:05:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 8 JPA repository interfaces.
2025-01-21 14:05:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:05:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:05:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-01-21 14:05:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:05:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:05:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:05:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:05:56 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:05:56 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2002 ms
2025-01-21 14:05:57 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:05:57 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:05:57 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:05:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:05:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:06:48 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c7b504
2025-01-21 14:06:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:06:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:06:50 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:06:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists address_social_links 
       drop constraint if exists FKf8co3916tiiox4iohci7ybiyg
2025-01-21 14:06:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       drop constraint if exists FK7wf86ejdl44syummkme09y06f
2025-01-21 14:06:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       drop constraint if exists FK1fa36y2oqhao3wgg2rw1pi459
2025-01-21 14:06:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       drop constraint if exists FK810a8gq30miyp6j1eub97qm6k
2025-01-21 14:06:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       drop constraint if exists FKara19f2xv7ml3a24f50v6bsk2
2025-01-21 14:06:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company 
       drop constraint if exists FKlgeojgfhu94pbgyev43gtwdyq
2025-01-21 14:06:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company_socials_list 
       drop constraint if exists FKt90ivcl5f3phabfuqw6k3t9ow
2025-01-21 14:06:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       drop constraint if exists FKlskx5ehjqd7u0dmumo4bhuliu
2025-01-21 14:06:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       drop constraint if exists FKajibco0vlgy0ngsyg33k0wb0u
2025-01-21 14:06:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_images 
       drop constraint if exists FK33nbb6c7curx5h7rp8479q7ea
2025-01-21 14:06:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists doors 
       drop constraint if exists FKgbgrx2rwc3wskrr30uptj4tmy
2025-01-21 14:06:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists email_verifications 
       drop constraint if exists FKou1xuy3rdeao75p2x1v4v3xs
2025-01-21 14:06:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       drop constraint if exists FKtncfqos5bn3jhhxs9m55tsgjk
2025-01-21 14:06:55 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-01-21 14:06:55 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "fktncfqos5bn3jhhxs9m55tsgjk" of relation "furniture_door_images" does not exist, skipping
2025-01-21 14:06:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       drop constraint if exists FKf50k9uqc2hstd0yl9uujhoq74
2025-01-21 14:06:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       drop constraint if exists FK32ql8ubntj5uh44ph9659tiih
2025-01-21 14:06:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists address_social_links cascade
2025-01-21 14:06:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists addresses cascade
2025-01-21 14:06:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists basket cascade
2025-01-21 14:06:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists basket_item cascade
2025-01-21 14:06:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists company cascade
2025-01-21 14:06:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists company_socials_list cascade
2025-01-21 14:06:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists door_history cascade
2025-01-21 14:06:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists door_images cascade
2025-01-21 14:06:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists doors cascade
2025-01-21 14:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists email_verifications cascade
2025-01-21 14:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists furniture_door_images cascade
2025-01-21 14:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists furniture_doors cascade
2025-01-21 14:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists locations cascade
2025-01-21 14:06:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-01-21 14:06:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists ticket cascade
2025-01-21 14:06:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-01-21 14:07:00 [main] DEBUG org.hibernate.SQL - 
    create table address_social_links (
        address_id bigint not null,
        link varchar(255),
        social_type varchar(255) not null check (social_type in ('FACEBOOK','TWITTER','INSTAGRAM','LINKEDIN','TELEGRAM')),
        primary key (address_id, social_type)
    )
2025-01-21 14:07:00 [main] DEBUG org.hibernate.SQL - 
    create table addresses (
        is_default boolean not null,
        id bigserial not null,
        location_id bigint unique,
        user_id bigint,
        city varchar(255),
        email varchar(255),
        name varchar(255),
        phone_number varchar(255),
        street varchar(255),
        working_hours varchar(255),
        primary key (id)
    )
2025-01-21 14:07:01 [main] DEBUG org.hibernate.SQL - 
    create table basket (
        id bigserial not null,
        user_id bigint unique,
        primary key (id)
    )
2025-01-21 14:07:01 [main] DEBUG org.hibernate.SQL - 
    create table basket_item (
        price float(53) not null,
        quantity integer not null,
        basket_id bigint,
        id bigserial not null,
        item_id bigint,
        image varchar(255),
        name varchar(255),
        type varchar(255) check (type in ('DOOR','ACCESSORY')),
        primary key (id)
    )
2025-01-21 14:07:02 [main] DEBUG org.hibernate.SQL - 
    create table company (
        work_time date,
        address_id bigint unique,
        id bigserial not null,
        email varchar(255),
        name varchar(255),
        phone varchar(255),
        primary key (id)
    )
2025-01-21 14:07:02 [main] DEBUG org.hibernate.SQL - 
    create table company_socials_list (
        company_id bigint not null,
        socials_list varchar(255) check (socials_list in ('FACEBOOK','TWITTER','INSTAGRAM','LINKEDIN','TELEGRAM'))
    )
2025-01-21 14:07:02 [main] DEBUG org.hibernate.SQL - 
    create table door_history (
        accessed_at timestamp(6),
        door_id bigint not null,
        id bigserial not null,
        user_id bigint not null,
        primary key (id)
    )
2025-01-21 14:07:02 [main] DEBUG org.hibernate.SQL - 
    create table door_images (
        door_id bigint not null,
        images varchar(255)
    )
2025-01-21 14:07:03 [main] DEBUG org.hibernate.SQL - 
    create table doors (
        active boolean not null,
        custom_height float(53),
        custom_width float(53),
        final_price float(53),
        is_custom_color boolean,
        price float(53),
        warranty_years integer,
        id bigserial not null,
        seller_id bigint,
        color varchar(255) check (color in ('WHITE','BROWN','BLACK','CUSTOM')),
        description varchar(255),
        manufacturer varchar(255),
        material varchar(255),
        name varchar(255),
        size varchar(255) check (size in ('SIZE_200x2000','SIZE_300x2000','SIZE_400x2000','SIZE_500x2000','SIZE_600x2000','SIZE_700x2000','SIZE_800x2000','SIZE_900x2000','SIZE_1000x2000','SIZE_1100x2000','SIZE_1200x2000','CUSTOM')),
        status varchar(255) not null check (status in ('AVAILABLE','PENDING','SOLD','INACTIVE','UNAVAILABLE')),
        primary key (id)
    )
2025-01-21 14:07:03 [main] DEBUG org.hibernate.SQL - 
    create table email_verifications (
        verified boolean not null,
        created_at timestamp(6),
        expiry_time timestamp(6) not null,
        id bigserial not null,
        updated_at timestamp(6),
        user_id bigint not null,
        type varchar(255) not null check (type in ('SELLER_REQUEST','PASSWORD_RESET','EMAIL_CONFIRMATION')),
        verification_code varchar(255) not null,
        primary key (id)
    )
2025-01-21 14:07:03 [main] DEBUG org.hibernate.SQL - 
    create table furniture_door_images (
        furniture_door_id bigint not null,
        image_url varchar(255)
    )
2025-01-21 14:07:03 [main] DEBUG org.hibernate.SQL - 
    create table furniture_doors (
        price float(53) not null,
        stock_quantity integer not null,
        id bigserial not null,
        description varchar(255),
        dimensions varchar(255),
        furniture_type varchar(255) not null check (furniture_type in ('LOCK','HANDLE','HINGES','AUTOMATIC_CLOSER','NO_FURNITURE')),
        material varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
2025-01-21 14:07:04 [main] DEBUG org.hibernate.SQL - 
    create table locations (
        latitude float(53),
        longitude float(53),
        id bigserial not null,
        marker_title varchar(255),
        primary key (id)
    )
2025-01-21 14:07:04 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        door_id bigint not null,
        id bigserial not null,
        order_date timestamp(6) not null,
        user_id bigint not null,
        contact_phone varchar(255) not null,
        delivery_address varchar(255) not null,
        order_type varchar(255) not null check (order_type in ('FULL_SET','POLOTNO')),
        status varchar(255) check (status in ('PENDING','CONFIRMED','PROCESSING','SHIPPED','DELIVERED','CANCELLED')),
        primary key (id)
    )
2025-01-21 14:07:04 [main] DEBUG org.hibernate.SQL - 
    create table ticket (
        id bigserial not null,
        user_id bigint,
        primary key (id)
    )
2025-01-21 14:07:05 [main] DEBUG org.hibernate.SQL - 
    create table users (
        active boolean not null,
        seller_request_pending boolean not null,
        id bigserial not null,
        email varchar(255),
        lastname varchar(255),
        name varchar(255),
        password varchar(255),
        phone varchar(255),
        role varchar(255) not null check (role in ('USER','SELLER','ADMIN')),
        primary key (id),
        constraint idx_user_email unique (email)
    )
2025-01-21 14:07:05 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_material 
       on doors (material)
2025-01-21 14:07:05 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_manufacturer 
       on doors (manufacturer)
2025-01-21 14:07:06 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_price 
       on doors (price)
2025-01-21 14:07:06 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_name 
       on doors (name)
2025-01-21 14:07:06 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_active_status 
       on doors (active, status)
2025-01-21 14:07:06 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_user 
       on orders (user_id)
2025-01-21 14:07:07 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_door 
       on orders (door_id)
2025-01-21 14:07:07 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_status_date 
       on orders (status, order_date)
2025-01-21 14:07:07 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_type_date 
       on orders (order_type, order_date)
2025-01-21 14:07:07 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_name 
       on users (name)
2025-01-21 14:07:08 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_role_active 
       on users (role, active)
2025-01-21 14:07:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists address_social_links 
       add constraint FKf8co3916tiiox4iohci7ybiyg 
       foreign key (address_id) 
       references addresses
2025-01-21 14:07:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       add constraint FK7wf86ejdl44syummkme09y06f 
       foreign key (location_id) 
       references locations
2025-01-21 14:07:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       add constraint FK1fa36y2oqhao3wgg2rw1pi459 
       foreign key (user_id) 
       references users
2025-01-21 14:07:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       add constraint FK810a8gq30miyp6j1eub97qm6k 
       foreign key (user_id) 
       references users
2025-01-21 14:07:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       add constraint FKara19f2xv7ml3a24f50v6bsk2 
       foreign key (basket_id) 
       references basket
2025-01-21 14:07:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company 
       add constraint FKlgeojgfhu94pbgyev43gtwdyq 
       foreign key (address_id) 
       references addresses
2025-01-21 14:07:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company_socials_list 
       add constraint FKt90ivcl5f3phabfuqw6k3t9ow 
       foreign key (company_id) 
       references company
2025-01-21 14:07:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       add constraint FKlskx5ehjqd7u0dmumo4bhuliu 
       foreign key (door_id) 
       references doors
2025-01-21 14:07:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       add constraint FKajibco0vlgy0ngsyg33k0wb0u 
       foreign key (user_id) 
       references users
2025-01-21 14:07:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_images 
       add constraint FK33nbb6c7curx5h7rp8479q7ea 
       foreign key (door_id) 
       references doors
2025-01-21 14:07:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists doors 
       add constraint FKgbgrx2rwc3wskrr30uptj4tmy 
       foreign key (seller_id) 
       references users
2025-01-21 14:07:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists email_verifications 
       add constraint FKou1xuy3rdeao75p2x1v4v3xs 
       foreign key (user_id) 
       references users
2025-01-21 14:07:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       add constraint FKtncfqos5bn3jhhxs9m55tsgjk 
       foreign key (furniture_door_id) 
       references furniture_doors
2025-01-21 14:07:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKf50k9uqc2hstd0yl9uujhoq74 
       foreign key (door_id) 
       references doors
2025-01-21 14:07:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-01-21 14:07:12 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:07:12 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:07:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:07:14 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:07:14 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:07:14 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:07:15 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:07:15 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:07:15 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15be4eb0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d071eac, org.springframework.security.web.context.SecurityContextHolderFilter@46ec2d20, org.springframework.security.web.header.HeaderWriterFilter@82d8fd9, org.springframework.web.filter.CorsFilter@7365d12b, org.springframework.security.web.authentication.logout.LogoutFilter@4b055bbd, uz.pdp.config.filtr.MyFilter@66a8ff6d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3cae6fcd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@548d884f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e1f7c80, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a0e530d, org.springframework.security.web.access.ExceptionTranslationFilter@2c4c722b, org.springframework.security.web.access.intercept.AuthorizationFilter@72bfd5d]
2025-01-21 14:07:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:07:16 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 82.008 seconds (process running for 82.598)
2025-01-21 14:07:16 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:07:17 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        furniture_doors fd1_0
2025-01-21 14:07:18 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.email=? 
        and u1_0.active=true
2025-01-21 14:07:18 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:19 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:19 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:20 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:20 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:20 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:20 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:21 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:21 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:21 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:21 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:22 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:22 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:22 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:23 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:23 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:23 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:23 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:24 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:24 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:24 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:24 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:26 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:07:27 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:27 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:27 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:28 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:28 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:29 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:29 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:30 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:30 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:31 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:31 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:31 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:32 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:07:33 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:07:34 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:07:35 [RMI TCP Connection(5)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:07:35 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:07:35 [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 14:09:21 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 531 ms
2025-01-21 14:09:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:09:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:09:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:09:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:09:58 [http-nio-8080-exec-10] INFO  uz.pdp.controller.AuthController - Processing registration request for user: string
2025-01-21 14:09:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id)>0 
    from
        users u1_0 
    where
        u1_0.name=?
2025-01-21 14:09:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id)>0 
    from
        users u1_0 
    where
        u1_0.email=?
2025-01-21 14:09:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:10:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:10:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:10:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:10:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:10:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket
        (user_id) 
    values
        (?)
2025-01-21 14:10:20 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:10:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:10:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:13:26 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 533413 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:13:26 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:13:26 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:13:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:13:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 8 JPA repository interfaces.
2025-01-21 14:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:13:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 14:13:27 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:13:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:13:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:13:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:13:28 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:13:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1598 ms
2025-01-21 14:13:28 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:13:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:13:28 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:13:28 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:13:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:13:31 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3f910f36
2025-01-21 14:13:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:13:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:13:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:13:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:13:48 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:13:49 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:13:50 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:13:50 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:13:50 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:13:51 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:13:51 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:13:51 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@39ec2988, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1437f717, org.springframework.security.web.context.SecurityContextHolderFilter@3427fb95, org.springframework.security.web.header.HeaderWriterFilter@4ebbf7c5, org.springframework.web.filter.CorsFilter@44962663, org.springframework.security.web.authentication.logout.LogoutFilter@6416b89d, uz.pdp.config.filtr.MyFilter@21579b35, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7264ddf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7957a97b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@16150bb7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a22ef09, org.springframework.security.web.access.ExceptionTranslationFilter@ca2f6b7, org.springframework.security.web.access.intercept.AuthorizationFilter@2d87d802]
2025-01-21 14:13:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:13:52 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.863 seconds (process running for 26.205)
2025-01-21 14:13:52 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:13:52 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:13:53 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:13:53 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:13:53 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 14:13:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:14:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:14:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:14:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:14:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:14:01 [http-nio-8080-exec-1] WARN  o.a.coyote.http11.Http11Processor - The HTTP response header [X-Basket-Message] with value [Your basket is as empty as a doorway without a door! 🚪] has been removed from the response because it is invalid
java.lang.IllegalArgumentException: The Unicode character [?] at code point [55,357] cannot be encoded as it is outside the permitted range of 0 to 255
	at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
	at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
	at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:389)
	at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:368)
	at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1049)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:377)
	at org.apache.coyote.Response.action(Response.java:210)
	at org.apache.coyote.Response.sendHeaders(Response.java:447)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:287)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:267)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:524)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1200)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1063)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-01-21 14:15:44 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:15:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:15:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:16:01 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 543291 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:16:01 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:16:01 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:16:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:16:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:16:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 8 JPA repository interfaces.
2025-01-21 14:16:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:16:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:16:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-01-21 14:16:02 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:16:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:16:03 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:16:03 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:16:03 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:16:03 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1726 ms
2025-01-21 14:16:03 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:16:03 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:16:03 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:16:03 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:16:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:16:06 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41962299
2025-01-21 14:16:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:16:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:16:07 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:16:25 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:16:26 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:16:27 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:16:28 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:16:28 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:16:28 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:16:28 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:16:28 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:16:28 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@62f73fd9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@392e2e29, org.springframework.security.web.context.SecurityContextHolderFilter@517eb52c, org.springframework.security.web.header.HeaderWriterFilter@7ab571c3, org.springframework.web.filter.CorsFilter@151728e0, org.springframework.security.web.authentication.logout.LogoutFilter@11204840, uz.pdp.config.filtr.MyFilter@3aed692d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7ae70f17, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ce714be, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68c62048, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@29a8d39a, org.springframework.security.web.access.ExceptionTranslationFilter@62a584e, org.springframework.security.web.access.intercept.AuthorizationFilter@4f64a692]
2025-01-21 14:16:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:16:29 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 28.281 seconds (process running for 28.754)
2025-01-21 14:16:29 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:16:29 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:16:30 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:16:30 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:16:30 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 14:17:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:17:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:17:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:17:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:17:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:20:20 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:20:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:20:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:21:18 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 563885 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:21:18 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:21:18 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:21:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:21:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:21:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 8 JPA repository interfaces.
2025-01-21 14:21:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:21:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:21:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 14:21:19 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:21:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:21:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:21:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:21:20 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:21:20 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1593 ms
2025-01-21 14:21:20 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:21:20 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:21:20 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:21:20 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:21:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:21:23 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4df54c1
2025-01-21 14:21:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:21:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:21:25 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:21:40 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:21:41 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:21:42 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:21:42 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:21:43 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:21:43 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:21:43 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:21:43 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:21:43 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28b07453, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c96d71f, org.springframework.security.web.context.SecurityContextHolderFilter@3cbaf7ad, org.springframework.security.web.header.HeaderWriterFilter@501ff898, org.springframework.web.filter.CorsFilter@2f4e2e7b, org.springframework.security.web.authentication.logout.LogoutFilter@21a62463, uz.pdp.config.filtr.MyFilter@7e514482, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@33f957ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b6090d4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33f17d3b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e33d738, org.springframework.security.web.access.ExceptionTranslationFilter@6d3d5c2d, org.springframework.security.web.access.intercept.AuthorizationFilter@575604ff]
2025-01-21 14:21:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:21:44 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 26.101 seconds (process running for 26.447)
2025-01-21 14:21:44 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:21:45 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:21:45 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:21:45 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:21:45 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 14:21:48 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 521 ms
2025-01-21 14:23:19 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:23:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:23:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:23:23 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 571726 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:23:23 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:23:23 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:23:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:23:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:23:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 8 JPA repository interfaces.
2025-01-21 14:23:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:23:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:23:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-01-21 14:23:24 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:23:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:23:25 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:23:25 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:23:25 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:23:25 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1578 ms
2025-01-21 14:23:25 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:23:25 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:23:25 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:23:25 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:23:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:23:28 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@50331591
2025-01-21 14:23:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:23:28 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:23:29 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:23:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:23:45 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:23:47 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:23:47 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:23:47 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:23:47 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:23:48 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:23:48 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:23:48 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1d071eac, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7365d12b, org.springframework.security.web.context.SecurityContextHolderFilter@1d0889e1, org.springframework.security.web.header.HeaderWriterFilter@4777a6e3, org.springframework.web.filter.CorsFilter@3a0e530d, org.springframework.security.web.authentication.logout.LogoutFilter@653b17be, uz.pdp.config.filtr.MyFilter@47666b39, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11d995f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38228a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f20280e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5da25132, org.springframework.security.web.access.ExceptionTranslationFilter@436219ba, org.springframework.security.web.access.intercept.AuthorizationFilter@7b213a09]
2025-01-21 14:23:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:23:49 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.863 seconds (process running for 26.165)
2025-01-21 14:23:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:23:49 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:23:50 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:23:50 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:23:50 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-01-21 14:23:54 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 488 ms
2025-01-21 14:24:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:24:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:24:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:24:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:24:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:24:45 [http-nio-8080-exec-5] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 5
2025-01-21 14:24:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 14:24:46 [http-nio-8080-exec-5] INFO  uz.pdp.service.DoorService - Retrieved door: Mediterranean Ergonomic Bamboo Door
2025-01-21 14:24:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:24:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:24:46 [http-nio-8080-exec-5] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 5
2025-01-21 14:24:46 [http-nio-8080-exec-5] INFO  uz.pdp.service.DoorService - Retrieved door: Mediterranean Ergonomic Bamboo Door
2025-01-21 14:24:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 14:24:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:24:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, image, item_id, name, price, quantity, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:24:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:24:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:24:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:24:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:28:22 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:28:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:28:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:29:42 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 595905 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:29:42 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:29:42 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:29:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:29:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:29:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 8 JPA repository interfaces.
2025-01-21 14:29:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:29:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:29:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 14:29:43 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:29:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:29:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:29:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:29:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:29:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1653 ms
2025-01-21 14:29:44 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:29:44 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:29:44 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:29:44 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:29:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:29:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@565983f3
2025-01-21 14:29:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:29:47 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:29:48 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:30:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:30:07 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:30:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:30:09 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:30:09 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:30:09 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:30:10 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:30:10 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:30:10 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@69b1e76b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7225ecc9, org.springframework.security.web.context.SecurityContextHolderFilter@6832558c, org.springframework.security.web.header.HeaderWriterFilter@5cf5e0d5, org.springframework.web.filter.CorsFilter@1d77a31d, org.springframework.security.web.authentication.logout.LogoutFilter@14b86f12, uz.pdp.config.filtr.MyFilter@3945886e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1c7aa844, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ab571c3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38c2e7c7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@197e53dd, org.springframework.security.web.access.ExceptionTranslationFilter@556adfac, org.springframework.security.web.access.intercept.AuthorizationFilter@3cae6fcd]
2025-01-21 14:30:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:30:11 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 29.157 seconds (process running for 29.467)
2025-01-21 14:30:11 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:30:11 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:30:12 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:30:12 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:30:12 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 14:30:35 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 482 ms
2025-01-21 14:30:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:30:42 [http-nio-8080-exec-4] INFO  uz.pdp.controller.AuthController - Processing login request for user: string
2025-01-21 14:30:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:30:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:31:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:31:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:31:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:31:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:31:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 14:31:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.furniture_door_id,
        i1_0.image_url 
    from
        furniture_door_images i1_0 
    where
        i1_0.furniture_door_id=?
2025-01-21 14:31:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:31:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, image, item_id, name, price, quantity, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:32:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:32:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:32:07 [http-nio-8080-exec-6] ERROR u.p.exception.GlobalExceptionHandler - Validation exception occurred: email: Please provide a valid email address
2025-01-21 14:32:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:32:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:32:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:32:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:32:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:32:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:32:33 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 5
2025-01-21 14:32:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 14:32:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:32:33 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 1
2025-01-21 14:32:34 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 4
2025-01-21 14:32:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 14:32:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:32:34 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 2
2025-01-21 14:32:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:32:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:32:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id in (?, ?)
2025-01-21 14:32:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 14:32:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 14:32:36 [http-nio-8080-exec-7] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 14:32:36 [http-nio-8080-exec-7] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?], SQL: delete from basket_item where id=?
2025-01-21 14:32:36 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Cancelling order ID: 1
2025-01-21 14:32:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 14:32:36 [http-nio-8080-exec-7] ERROR uz.pdp.service.OrderService - Error cancelling order: 400 BAD_REQUEST "Only pending orders can be cancelled"
2025-01-21 14:32:37 [http-nio-8080-exec-7] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.web.server.ResponseStatusException: 500 INTERNAL_SERVER_ERROR "Error cancelling order"
	at uz.pdp.service.OrderService.cancelOrder(OrderService.java:165)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.OrderService$$SpringCGLIB$$0.cancelOrder(<generated>)
	at uz.pdp.controller.BasketController.lambda$checkout$1(BasketController.java:207)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at uz.pdp.controller.BasketController.checkout(BasketController.java:207)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.web.server.ResponseStatusException: 400 BAD_REQUEST "Only pending orders can be cancelled"
	at uz.pdp.service.OrderService.cancelOrder(OrderService.java:154)
	... 167 common frames omitted
2025-01-21 14:34:37 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:34:37 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:34:39 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:37:20 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 625612 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:37:20 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:37:20 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:37:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:37:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:37:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 8 JPA repository interfaces.
2025-01-21 14:37:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:37:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:37:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 14:37:21 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:37:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:37:21 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:37:21 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:37:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:37:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1764 ms
2025-01-21 14:37:22 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:37:22 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:37:22 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:37:22 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:37:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:37:25 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@72321701
2025-01-21 14:37:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:37:25 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:37:26 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:37:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:37:42 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:37:44 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:37:44 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:37:44 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:37:44 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:37:45 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:37:45 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:37:45 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5baded37, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e14502a, org.springframework.security.web.context.SecurityContextHolderFilter@34d2e58d, org.springframework.security.web.header.HeaderWriterFilter@7809e39, org.springframework.web.filter.CorsFilter@545d9128, org.springframework.security.web.authentication.logout.LogoutFilter@28b07453, uz.pdp.config.filtr.MyFilter@1dac0784, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5fce571d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7322fbb3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5805291c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35eaad5f, org.springframework.security.web.access.ExceptionTranslationFilter@14691ed4, org.springframework.security.web.access.intercept.AuthorizationFilter@aac1a01]
2025-01-21 14:37:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:37:45 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.999 seconds (process running for 26.367)
2025-01-21 14:37:46 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:37:46 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:37:47 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:37:47 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:37:47 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 14:37:52 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 470 ms
2025-01-21 14:38:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:38:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:38:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:38:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:38:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:38:10 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 5
2025-01-21 14:38:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 14:38:11 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieved door: Mediterranean Ergonomic Bamboo Door
2025-01-21 14:38:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 14:38:11 [http-nio-8080-exec-4] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 5
2025-01-21 14:39:31 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:39:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:39:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:39:35 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 634250 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:39:35 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:39:35 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:39:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:39:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:39:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 8 JPA repository interfaces.
2025-01-21 14:39:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:39:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:39:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 14:39:36 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:39:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:39:36 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:39:36 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:39:36 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:39:36 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1529 ms
2025-01-21 14:39:37 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:39:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:39:37 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:39:37 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:39:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:39:40 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6421bc7e
2025-01-21 14:39:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:39:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:39:41 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:39:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:39:57 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:39:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:39:58 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:39:59 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:39:59 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:39:59 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:39:59 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:39:59 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1d77a31d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@197e53dd, org.springframework.security.web.context.SecurityContextHolderFilter@625071dc, org.springframework.security.web.header.HeaderWriterFilter@7322fbb3, org.springframework.web.filter.CorsFilter@7f927526, org.springframework.security.web.authentication.logout.LogoutFilter@35a7d79e, uz.pdp.config.filtr.MyFilter@21579b35, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@24f1b8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8be9c5a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@408664b5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@228c8db9, org.springframework.security.web.access.ExceptionTranslationFilter@782e0665, org.springframework.security.web.access.intercept.AuthorizationFilter@22bd8120]
2025-01-21 14:40:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:40:00 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.282 seconds (process running for 25.613)
2025-01-21 14:40:00 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:40:01 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:40:01 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:40:01 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:40:01 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-01-21 14:40:35 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 481 ms
2025-01-21 14:40:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:40:44 [http-nio-8080-exec-2] ERROR u.p.exception.GlobalExceptionHandler - Validation exception occurred: email: Please provide a valid email address
2025-01-21 14:41:43 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:41:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:41:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:41:47 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 642145 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:41:47 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:41:47 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:41:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:41:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:41:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 8 JPA repository interfaces.
2025-01-21 14:41:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:41:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:41:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 14:41:48 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:41:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:41:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:41:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:41:49 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:41:49 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1592 ms
2025-01-21 14:41:49 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:41:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:41:49 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:41:49 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:41:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:41:52 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41962299
2025-01-21 14:41:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:41:52 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:41:53 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:42:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:42:09 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:42:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:42:11 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:42:11 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:42:11 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:42:12 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:42:12 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:42:12 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@ca2f6b7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@403b0010, org.springframework.security.web.context.SecurityContextHolderFilter@120aa894, org.springframework.security.web.header.HeaderWriterFilter@477a61f8, org.springframework.web.filter.CorsFilter@6c950810, org.springframework.security.web.authentication.logout.LogoutFilter@3720c2ec, uz.pdp.config.filtr.MyFilter@3aed692d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1cf5e516, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1acf5609, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@199680ae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@464a5994, org.springframework.security.web.access.ExceptionTranslationFilter@1a28691c, org.springframework.security.web.access.intercept.AuthorizationFilter@2f0d47d6]
2025-01-21 14:42:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:42:13 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.833 seconds (process running for 26.181)
2025-01-21 14:42:13 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:42:13 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:42:14 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:42:14 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:42:14 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 14:42:24 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 496 ms
2025-01-21 14:42:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:42:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:42:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:42:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:42:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:42:32 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 5
2025-01-21 14:42:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 14:42:33 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieved door: Mediterranean Ergonomic Bamboo Door
2025-01-21 14:42:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 14:42:33 [http-nio-8080-exec-4] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 5
2025-01-21 14:42:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:42:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:42:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:42:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:42:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id in (?, ?)
2025-01-21 14:42:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 14:42:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 14:42:44 [http-nio-8080-exec-7] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 14:42:44 [http-nio-8080-exec-7] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?], SQL: delete from basket_item where id=?
2025-01-21 14:42:44 [http-nio-8080-exec-7] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.orm.ObjectOptimisticLockingFailureException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:328)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.clearBasket(<generated>)
	at uz.pdp.controller.BasketController.clearBasket(BasketController.java:137)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.clearBasket(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.checkRowCounts(BatchImpl.java:321)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:285)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 159 common frames omitted
2025-01-21 14:42:58 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:42:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:42:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:43:01 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 647260 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:43:01 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:43:01 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:43:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:43:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:43:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 8 JPA repository interfaces.
2025-01-21 14:43:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:43:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:43:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 14:43:02 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:43:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:43:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:43:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:43:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:43:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1616 ms
2025-01-21 14:43:03 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:43:03 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:43:03 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:43:03 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:43:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:43:06 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71f86562
2025-01-21 14:43:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:43:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:43:07 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:43:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists address_social_links 
       drop constraint if exists FKf8co3916tiiox4iohci7ybiyg
2025-01-21 14:43:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       drop constraint if exists FK7wf86ejdl44syummkme09y06f
2025-01-21 14:43:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       drop constraint if exists FK1fa36y2oqhao3wgg2rw1pi459
2025-01-21 14:43:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       drop constraint if exists FK810a8gq30miyp6j1eub97qm6k
2025-01-21 14:43:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       drop constraint if exists FKara19f2xv7ml3a24f50v6bsk2
2025-01-21 14:43:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company 
       drop constraint if exists FKlgeojgfhu94pbgyev43gtwdyq
2025-01-21 14:43:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company_socials_list 
       drop constraint if exists FKt90ivcl5f3phabfuqw6k3t9ow
2025-01-21 14:43:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       drop constraint if exists FKlskx5ehjqd7u0dmumo4bhuliu
2025-01-21 14:43:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       drop constraint if exists FKajibco0vlgy0ngsyg33k0wb0u
2025-01-21 14:43:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_images 
       drop constraint if exists FK33nbb6c7curx5h7rp8479q7ea
2025-01-21 14:43:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists doors 
       drop constraint if exists FKgbgrx2rwc3wskrr30uptj4tmy
2025-01-21 14:43:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists email_verifications 
       drop constraint if exists FKou1xuy3rdeao75p2x1v4v3xs
2025-01-21 14:43:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       drop constraint if exists FKtncfqos5bn3jhhxs9m55tsgjk
2025-01-21 14:43:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       drop constraint if exists FKf50k9uqc2hstd0yl9uujhoq74
2025-01-21 14:43:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       drop constraint if exists FK32ql8ubntj5uh44ph9659tiih
2025-01-21 14:43:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists address_social_links cascade
2025-01-21 14:43:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists addresses cascade
2025-01-21 14:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists basket cascade
2025-01-21 14:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists basket_item cascade
2025-01-21 14:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists company cascade
2025-01-21 14:43:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists company_socials_list cascade
2025-01-21 14:43:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists door_history cascade
2025-01-21 14:43:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists door_images cascade
2025-01-21 14:43:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists doors cascade
2025-01-21 14:43:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists email_verifications cascade
2025-01-21 14:43:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists furniture_door_images cascade
2025-01-21 14:43:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists furniture_doors cascade
2025-01-21 14:43:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists locations cascade
2025-01-21 14:43:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-01-21 14:43:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists ticket cascade
2025-01-21 14:43:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-01-21 14:43:15 [main] DEBUG org.hibernate.SQL - 
    create table address_social_links (
        address_id bigint not null,
        link varchar(255),
        social_type varchar(255) not null check (social_type in ('FACEBOOK','TWITTER','INSTAGRAM','LINKEDIN','TELEGRAM')),
        primary key (address_id, social_type)
    )
2025-01-21 14:43:16 [main] DEBUG org.hibernate.SQL - 
    create table addresses (
        is_default boolean not null,
        id bigserial not null,
        location_id bigint unique,
        user_id bigint,
        city varchar(255),
        email varchar(255),
        name varchar(255),
        phone_number varchar(255),
        street varchar(255),
        working_hours varchar(255),
        primary key (id)
    )
2025-01-21 14:43:16 [main] DEBUG org.hibernate.SQL - 
    create table basket (
        id bigserial not null,
        user_id bigint unique,
        primary key (id)
    )
2025-01-21 14:43:16 [main] DEBUG org.hibernate.SQL - 
    create table basket_item (
        price float(53) not null,
        quantity integer not null,
        basket_id bigint,
        id bigserial not null,
        item_id bigint,
        image varchar(255),
        name varchar(255),
        type varchar(255) check (type in ('DOOR','ACCESSORY')),
        primary key (id)
    )
2025-01-21 14:43:16 [main] DEBUG org.hibernate.SQL - 
    create table company (
        work_time date,
        address_id bigint unique,
        id bigserial not null,
        email varchar(255),
        name varchar(255),
        phone varchar(255),
        primary key (id)
    )
2025-01-21 14:43:17 [main] DEBUG org.hibernate.SQL - 
    create table company_socials_list (
        company_id bigint not null,
        socials_list varchar(255) check (socials_list in ('FACEBOOK','TWITTER','INSTAGRAM','LINKEDIN','TELEGRAM'))
    )
2025-01-21 14:43:17 [main] DEBUG org.hibernate.SQL - 
    create table door_history (
        accessed_at timestamp(6),
        door_id bigint not null,
        id bigserial not null,
        user_id bigint not null,
        primary key (id)
    )
2025-01-21 14:43:17 [main] DEBUG org.hibernate.SQL - 
    create table door_images (
        door_id bigint not null,
        images varchar(255)
    )
2025-01-21 14:43:18 [main] DEBUG org.hibernate.SQL - 
    create table doors (
        active boolean not null,
        custom_height float(53),
        custom_width float(53),
        final_price float(53),
        is_custom_color boolean,
        price float(53),
        warranty_years integer,
        id bigserial not null,
        seller_id bigint,
        color varchar(255) check (color in ('WHITE','BROWN','BLACK','CUSTOM')),
        description varchar(255),
        manufacturer varchar(255),
        material varchar(255),
        name varchar(255),
        size varchar(255) check (size in ('SIZE_200x2000','SIZE_300x2000','SIZE_400x2000','SIZE_500x2000','SIZE_600x2000','SIZE_700x2000','SIZE_800x2000','SIZE_900x2000','SIZE_1000x2000','SIZE_1100x2000','SIZE_1200x2000','CUSTOM')),
        status varchar(255) not null check (status in ('AVAILABLE','PENDING','SOLD','INACTIVE','UNAVAILABLE')),
        primary key (id)
    )
2025-01-21 14:43:18 [main] DEBUG org.hibernate.SQL - 
    create table email_verifications (
        verified boolean not null,
        created_at timestamp(6),
        expiry_time timestamp(6) not null,
        id bigserial not null,
        updated_at timestamp(6),
        user_id bigint not null,
        type varchar(255) not null check (type in ('SELLER_REQUEST','PASSWORD_RESET','EMAIL_CONFIRMATION')),
        verification_code varchar(255) not null,
        primary key (id)
    )
2025-01-21 14:43:18 [main] DEBUG org.hibernate.SQL - 
    create table furniture_door_images (
        furniture_door_id bigint not null,
        image_url varchar(255)
    )
2025-01-21 14:43:18 [main] DEBUG org.hibernate.SQL - 
    create table furniture_doors (
        price float(53) not null,
        stock_quantity integer not null,
        id bigserial not null,
        description varchar(255),
        dimensions varchar(255),
        furniture_type varchar(255) not null check (furniture_type in ('LOCK','HANDLE','HINGES','AUTOMATIC_CLOSER','NO_FURNITURE')),
        material varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
2025-01-21 14:43:19 [main] DEBUG org.hibernate.SQL - 
    create table locations (
        latitude float(53),
        longitude float(53),
        id bigserial not null,
        marker_title varchar(255),
        primary key (id)
    )
2025-01-21 14:43:19 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        door_id bigint not null,
        id bigserial not null,
        order_date timestamp(6) not null,
        user_id bigint not null,
        contact_phone varchar(255) not null,
        delivery_address varchar(255) not null,
        order_type varchar(255) not null check (order_type in ('FULL_SET','POLOTNO')),
        status varchar(255) check (status in ('PENDING','CONFIRMED','PROCESSING','SHIPPED','DELIVERED','CANCELLED')),
        primary key (id)
    )
2025-01-21 14:43:19 [main] DEBUG org.hibernate.SQL - 
    create table ticket (
        id bigserial not null,
        user_id bigint,
        primary key (id)
    )
2025-01-21 14:43:19 [main] DEBUG org.hibernate.SQL - 
    create table users (
        active boolean not null,
        seller_request_pending boolean not null,
        id bigserial not null,
        email varchar(255),
        lastname varchar(255),
        name varchar(255),
        password varchar(255),
        phone varchar(255),
        role varchar(255) not null check (role in ('USER','SELLER','ADMIN')),
        primary key (id),
        constraint idx_user_email unique (email)
    )
2025-01-21 14:43:20 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_material 
       on doors (material)
2025-01-21 14:43:20 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_manufacturer 
       on doors (manufacturer)
2025-01-21 14:43:20 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_price 
       on doors (price)
2025-01-21 14:43:20 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_name 
       on doors (name)
2025-01-21 14:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_active_status 
       on doors (active, status)
2025-01-21 14:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_user 
       on orders (user_id)
2025-01-21 14:43:21 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_door 
       on orders (door_id)
2025-01-21 14:43:22 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_status_date 
       on orders (status, order_date)
2025-01-21 14:43:22 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_type_date 
       on orders (order_type, order_date)
2025-01-21 14:43:22 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_name 
       on users (name)
2025-01-21 14:43:22 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_role_active 
       on users (role, active)
2025-01-21 14:43:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists address_social_links 
       add constraint FKf8co3916tiiox4iohci7ybiyg 
       foreign key (address_id) 
       references addresses
2025-01-21 14:43:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       add constraint FK7wf86ejdl44syummkme09y06f 
       foreign key (location_id) 
       references locations
2025-01-21 14:43:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       add constraint FK1fa36y2oqhao3wgg2rw1pi459 
       foreign key (user_id) 
       references users
2025-01-21 14:43:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       add constraint FK810a8gq30miyp6j1eub97qm6k 
       foreign key (user_id) 
       references users
2025-01-21 14:43:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       add constraint FKara19f2xv7ml3a24f50v6bsk2 
       foreign key (basket_id) 
       references basket
2025-01-21 14:43:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company 
       add constraint FKlgeojgfhu94pbgyev43gtwdyq 
       foreign key (address_id) 
       references addresses
2025-01-21 14:43:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company_socials_list 
       add constraint FKt90ivcl5f3phabfuqw6k3t9ow 
       foreign key (company_id) 
       references company
2025-01-21 14:43:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       add constraint FKlskx5ehjqd7u0dmumo4bhuliu 
       foreign key (door_id) 
       references doors
2025-01-21 14:43:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       add constraint FKajibco0vlgy0ngsyg33k0wb0u 
       foreign key (user_id) 
       references users
2025-01-21 14:43:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_images 
       add constraint FK33nbb6c7curx5h7rp8479q7ea 
       foreign key (door_id) 
       references doors
2025-01-21 14:43:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists doors 
       add constraint FKgbgrx2rwc3wskrr30uptj4tmy 
       foreign key (seller_id) 
       references users
2025-01-21 14:43:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists email_verifications 
       add constraint FKou1xuy3rdeao75p2x1v4v3xs 
       foreign key (user_id) 
       references users
2025-01-21 14:43:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       add constraint FKtncfqos5bn3jhhxs9m55tsgjk 
       foreign key (furniture_door_id) 
       references furniture_doors
2025-01-21 14:43:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKf50k9uqc2hstd0yl9uujhoq74 
       foreign key (door_id) 
       references doors
2025-01-21 14:43:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-01-21 14:43:26 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:43:27 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:43:28 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:43:29 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:43:29 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:43:29 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:43:29 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:43:29 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:43:30 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@92f5f61, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@340bdd5c, org.springframework.security.web.context.SecurityContextHolderFilter@49632250, org.springframework.security.web.header.HeaderWriterFilter@543c2e75, org.springframework.web.filter.CorsFilter@43f223c6, org.springframework.security.web.authentication.logout.LogoutFilter@727a3881, uz.pdp.config.filtr.MyFilter@212c0aff, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@40007389, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e14502a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74ef575b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d44ac86, org.springframework.security.web.access.ExceptionTranslationFilter@2d87d802, org.springframework.security.web.access.intercept.AuthorizationFilter@386695ff]
2025-01-21 14:43:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:43:30 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 30.052 seconds (process running for 30.556)
2025-01-21 14:43:31 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:43:31 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:32 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:43:32 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        furniture_doors fd1_0
2025-01-21 14:43:33 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.email=? 
        and u1_0.active=true
2025-01-21 14:43:33 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:34 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:34 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:34 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:35 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:35 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:35 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:35 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:36 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:36 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:36 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:36 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:37 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:37 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:37 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:37 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:38 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:38 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:38 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:38 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:43:41 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:41 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:41 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:42 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:42 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:42 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:42 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:43 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:43 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:43 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:43 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:44 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:44 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:44 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:44 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:43:46 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:43:46 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:43:46 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 14:44:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:44:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:44:24 [http-nio-8080-exec-8] INFO  uz.pdp.controller.AuthController - Processing registration request for user: string
2025-01-21 14:44:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id)>0 
    from
        users u1_0 
    where
        u1_0.name=?
2025-01-21 14:44:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id)>0 
    from
        users u1_0 
    where
        u1_0.email=?
2025-01-21 14:44:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:44:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:44:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:44:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:44:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:44:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket
        (user_id) 
    values
        (?)
2025-01-21 14:49:02 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:49:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:49:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:49:06 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 669380 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:49:06 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:49:06 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:49:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:49:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:49:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 89 ms. Found 8 JPA repository interfaces.
2025-01-21 14:49:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:49:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:49:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 14:49:07 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:49:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:49:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:49:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:49:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:49:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1656 ms
2025-01-21 14:49:08 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:49:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:49:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:49:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:49:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:49:11 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@565983f3
2025-01-21 14:49:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:49:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:49:12 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:49:14 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_phone 
       on users (phone)
2025-01-21 14:49:28 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:49:28 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:49:29 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:49:30 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:49:30 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:49:30 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:49:30 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:49:30 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:49:31 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@20f6cb2a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f416fe3, org.springframework.security.web.context.SecurityContextHolderFilter@4c96d71f, org.springframework.security.web.header.HeaderWriterFilter@222ede10, org.springframework.web.filter.CorsFilter@22587bcf, org.springframework.security.web.authentication.logout.LogoutFilter@3cae6fcd, uz.pdp.config.filtr.MyFilter@3945886e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@727a3881, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15ad2c0e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62c83153, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@403b2e0b, org.springframework.security.web.access.ExceptionTranslationFilter@1da3ef74, org.springframework.security.web.access.intercept.AuthorizationFilter@37467bcb]
2025-01-21 14:49:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:49:31 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.863 seconds (process running for 26.252)
2025-01-21 14:49:32 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:49:32 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:33 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:49:33 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:49:33 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 14:49:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:49:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:49:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:49:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:49:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:58 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 14:49:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 14:49:58 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Gorgeous Fiberglass Door
2025-01-21 14:49:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:49:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:49:59 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 14:49:59 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Gorgeous Fiberglass Door
2025-01-21 14:49:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 14:49:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:49:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, image, item_id, name, price, quantity, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:50:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:50:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:50:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:50:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:50:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 14:50:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.furniture_door_id,
        i1_0.image_url 
    from
        furniture_door_images i1_0 
    where
        i1_0.furniture_door_id=?
2025-01-21 14:50:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:50:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, image, item_id, name, price, quantity, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:50:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:50:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:50:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:50:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:50:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:50:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 14:50:33 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 14:50:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 14:50:34 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Gorgeous Fiberglass Door
2025-01-21 14:50:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 14:50:34 [http-nio-8080-exec-10] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 1
2025-01-21 14:50:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:50:34 [http-nio-8080-exec-10] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 1
2025-01-21 14:50:35 [http-nio-8080-exec-10] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 4
2025-01-21 14:50:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 14:50:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:50:35 [http-nio-8080-exec-10] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 2
2025-01-21 14:50:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:50:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 14:50:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id in (?, ?)
2025-01-21 14:50:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 14:50:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 14:50:37 [http-nio-8080-exec-10] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 14:50:37 [http-nio-8080-exec-10] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?], SQL: delete from basket_item where id=?
2025-01-21 14:50:37 [http-nio-8080-exec-10] INFO  uz.pdp.service.OrderService - Cancelling order ID: 1
2025-01-21 14:50:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 14:50:37 [http-nio-8080-exec-10] ERROR uz.pdp.service.OrderService - Error cancelling order: 400 BAD_REQUEST "Only pending orders can be cancelled"
2025-01-21 14:50:38 [http-nio-8080-exec-10] ERROR uz.pdp.controller.BasketController - Failed to cancel order 1 during error handling: 500 INTERNAL_SERVER_ERROR "Error cancelling order"
2025-01-21 14:50:38 [http-nio-8080-exec-10] INFO  uz.pdp.service.OrderService - Cancelling order ID: 2
2025-01-21 14:50:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 14:50:38 [http-nio-8080-exec-10] ERROR uz.pdp.service.OrderService - Error cancelling order: 400 BAD_REQUEST "Only pending orders can be cancelled"
2025-01-21 14:50:38 [http-nio-8080-exec-10] ERROR uz.pdp.controller.BasketController - Failed to cancel order 2 during error handling: 500 INTERNAL_SERVER_ERROR "Error cancelling order"
2025-01-21 14:50:38 [http-nio-8080-exec-10] ERROR uz.pdp.controller.BasketController - Checkout failed: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
org.springframework.orm.ObjectOptimisticLockingFailureException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:328)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.clearBasket(<generated>)
	at uz.pdp.controller.BasketController.checkout(BasketController.java:250)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.checkRowCounts(BatchImpl.java:321)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:285)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 159 common frames omitted
2025-01-21 14:54:13 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:54:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:54:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:54:17 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 683158 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:54:17 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:54:17 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:54:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:54:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:54:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 8 JPA repository interfaces.
2025-01-21 14:54:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:54:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:54:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 14:54:18 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:54:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:54:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:54:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:54:18 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:54:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1482 ms
2025-01-21 14:54:19 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:54:19 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:54:19 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:54:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:54:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:54:22 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6908674b
2025-01-21 14:54:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:54:22 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:54:23 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:54:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists address_social_links 
       drop constraint if exists FKf8co3916tiiox4iohci7ybiyg
2025-01-21 14:54:23 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       drop constraint if exists FK7wf86ejdl44syummkme09y06f
2025-01-21 14:54:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       drop constraint if exists FK1fa36y2oqhao3wgg2rw1pi459
2025-01-21 14:54:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       drop constraint if exists FK810a8gq30miyp6j1eub97qm6k
2025-01-21 14:54:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       drop constraint if exists FKara19f2xv7ml3a24f50v6bsk2
2025-01-21 14:54:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company 
       drop constraint if exists FKlgeojgfhu94pbgyev43gtwdyq
2025-01-21 14:54:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company_socials_list 
       drop constraint if exists FKt90ivcl5f3phabfuqw6k3t9ow
2025-01-21 14:54:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       drop constraint if exists FKlskx5ehjqd7u0dmumo4bhuliu
2025-01-21 14:54:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       drop constraint if exists FKajibco0vlgy0ngsyg33k0wb0u
2025-01-21 14:54:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_images 
       drop constraint if exists FK33nbb6c7curx5h7rp8479q7ea
2025-01-21 14:54:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists doors 
       drop constraint if exists FKgbgrx2rwc3wskrr30uptj4tmy
2025-01-21 14:54:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists email_verifications 
       drop constraint if exists FKou1xuy3rdeao75p2x1v4v3xs
2025-01-21 14:54:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       drop constraint if exists FKtncfqos5bn3jhhxs9m55tsgjk
2025-01-21 14:54:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       drop constraint if exists FKf50k9uqc2hstd0yl9uujhoq74
2025-01-21 14:54:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       drop constraint if exists FK32ql8ubntj5uh44ph9659tiih
2025-01-21 14:54:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists address_social_links cascade
2025-01-21 14:54:28 [main] DEBUG org.hibernate.SQL - 
    drop table if exists addresses cascade
2025-01-21 14:54:28 [main] DEBUG org.hibernate.SQL - 
    drop table if exists basket cascade
2025-01-21 14:54:28 [main] DEBUG org.hibernate.SQL - 
    drop table if exists basket_item cascade
2025-01-21 14:54:28 [main] DEBUG org.hibernate.SQL - 
    drop table if exists company cascade
2025-01-21 14:54:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists company_socials_list cascade
2025-01-21 14:54:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists door_history cascade
2025-01-21 14:54:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists door_images cascade
2025-01-21 14:54:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists doors cascade
2025-01-21 14:54:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists email_verifications cascade
2025-01-21 14:54:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists furniture_door_images cascade
2025-01-21 14:54:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists furniture_doors cascade
2025-01-21 14:54:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists locations cascade
2025-01-21 14:54:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-01-21 14:54:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists ticket cascade
2025-01-21 14:54:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-01-21 14:54:31 [main] DEBUG org.hibernate.SQL - 
    create table address_social_links (
        address_id bigint not null,
        link varchar(255),
        social_type varchar(255) not null check (social_type in ('FACEBOOK','TWITTER','INSTAGRAM','LINKEDIN','TELEGRAM')),
        primary key (address_id, social_type)
    )
2025-01-21 14:54:32 [main] DEBUG org.hibernate.SQL - 
    create table addresses (
        is_default boolean not null,
        id bigserial not null,
        location_id bigint unique,
        user_id bigint,
        city varchar(255),
        email varchar(255),
        name varchar(255),
        phone_number varchar(255),
        street varchar(255),
        working_hours varchar(255),
        primary key (id)
    )
2025-01-21 14:54:32 [main] DEBUG org.hibernate.SQL - 
    create table basket (
        id bigserial not null,
        user_id bigint unique,
        primary key (id)
    )
2025-01-21 14:54:32 [main] DEBUG org.hibernate.SQL - 
    create table basket_item (
        price float(53) not null,
        quantity integer not null,
        basket_id bigint,
        id bigserial not null,
        item_id bigint,
        image varchar(255),
        name varchar(255),
        type varchar(255) check (type in ('DOOR','ACCESSORY')),
        primary key (id)
    )
2025-01-21 14:54:32 [main] DEBUG org.hibernate.SQL - 
    create table company (
        work_time date,
        address_id bigint unique,
        id bigserial not null,
        email varchar(255),
        name varchar(255),
        phone varchar(255),
        primary key (id)
    )
2025-01-21 14:54:33 [main] DEBUG org.hibernate.SQL - 
    create table company_socials_list (
        company_id bigint not null,
        socials_list varchar(255) check (socials_list in ('FACEBOOK','TWITTER','INSTAGRAM','LINKEDIN','TELEGRAM'))
    )
2025-01-21 14:54:33 [main] DEBUG org.hibernate.SQL - 
    create table door_history (
        accessed_at timestamp(6),
        door_id bigint not null,
        id bigserial not null,
        user_id bigint not null,
        primary key (id)
    )
2025-01-21 14:54:33 [main] DEBUG org.hibernate.SQL - 
    create table door_images (
        door_id bigint not null,
        images varchar(255)
    )
2025-01-21 14:54:34 [main] DEBUG org.hibernate.SQL - 
    create table doors (
        active boolean not null,
        custom_height float(53),
        custom_width float(53),
        final_price float(53),
        is_custom_color boolean,
        price float(53),
        warranty_years integer,
        id bigserial not null,
        seller_id bigint,
        color varchar(255) check (color in ('WHITE','BROWN','BLACK','CUSTOM')),
        description varchar(255),
        manufacturer varchar(255),
        material varchar(255),
        name varchar(255),
        size varchar(255) check (size in ('SIZE_200x2000','SIZE_300x2000','SIZE_400x2000','SIZE_500x2000','SIZE_600x2000','SIZE_700x2000','SIZE_800x2000','SIZE_900x2000','SIZE_1000x2000','SIZE_1100x2000','SIZE_1200x2000','CUSTOM')),
        status varchar(255) not null check (status in ('AVAILABLE','PENDING','SOLD','INACTIVE','UNAVAILABLE')),
        primary key (id)
    )
2025-01-21 14:54:34 [main] DEBUG org.hibernate.SQL - 
    create table email_verifications (
        verified boolean not null,
        created_at timestamp(6),
        expiry_time timestamp(6) not null,
        id bigserial not null,
        updated_at timestamp(6),
        user_id bigint not null,
        type varchar(255) not null check (type in ('SELLER_REQUEST','PASSWORD_RESET','EMAIL_CONFIRMATION')),
        verification_code varchar(255) not null,
        primary key (id)
    )
2025-01-21 14:54:34 [main] DEBUG org.hibernate.SQL - 
    create table furniture_door_images (
        furniture_door_id bigint not null,
        image_url varchar(255)
    )
2025-01-21 14:54:34 [main] DEBUG org.hibernate.SQL - 
    create table furniture_doors (
        price float(53) not null,
        stock_quantity integer not null,
        id bigserial not null,
        description varchar(255),
        dimensions varchar(255),
        furniture_type varchar(255) not null check (furniture_type in ('LOCK','HANDLE','HINGES','AUTOMATIC_CLOSER','NO_FURNITURE')),
        material varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
2025-01-21 14:54:35 [main] DEBUG org.hibernate.SQL - 
    create table locations (
        latitude float(53),
        longitude float(53),
        id bigserial not null,
        marker_title varchar(255),
        primary key (id)
    )
2025-01-21 14:54:35 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        door_id bigint not null,
        id bigserial not null,
        order_date timestamp(6) not null,
        user_id bigint not null,
        contact_phone varchar(255) not null,
        delivery_address varchar(255) not null,
        order_type varchar(255) not null check (order_type in ('FULL_SET','POLOTNO')),
        status varchar(255) check (status in ('PENDING','CONFIRMED','PROCESSING','SHIPPED','DELIVERED','CANCELLED')),
        primary key (id)
    )
2025-01-21 14:54:35 [main] DEBUG org.hibernate.SQL - 
    create table ticket (
        id bigserial not null,
        user_id bigint,
        primary key (id)
    )
2025-01-21 14:54:36 [main] DEBUG org.hibernate.SQL - 
    create table users (
        active boolean not null,
        seller_request_pending boolean not null,
        id bigserial not null,
        email varchar(255) unique,
        lastname varchar(255),
        name varchar(255),
        password varchar(255),
        phone varchar(255) not null,
        role varchar(255) not null check (role in ('USER','SELLER','ADMIN')),
        primary key (id)
    )
2025-01-21 14:54:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_material 
       on doors (material)
2025-01-21 14:54:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_manufacturer 
       on doors (manufacturer)
2025-01-21 14:54:36 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_price 
       on doors (price)
2025-01-21 14:54:37 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_name 
       on doors (name)
2025-01-21 14:54:37 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_active_status 
       on doors (active, status)
2025-01-21 14:54:37 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_user 
       on orders (user_id)
2025-01-21 14:54:37 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_door 
       on orders (door_id)
2025-01-21 14:54:38 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_status_date 
       on orders (status, order_date)
2025-01-21 14:54:38 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_type_date 
       on orders (order_type, order_date)
2025-01-21 14:54:38 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_name 
       on users (name)
2025-01-21 14:54:38 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_phone 
       on users (phone)
2025-01-21 14:54:39 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_role_active 
       on users (role, active)
2025-01-21 14:54:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists address_social_links 
       add constraint FKf8co3916tiiox4iohci7ybiyg 
       foreign key (address_id) 
       references addresses
2025-01-21 14:54:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       add constraint FK7wf86ejdl44syummkme09y06f 
       foreign key (location_id) 
       references locations
2025-01-21 14:54:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       add constraint FK1fa36y2oqhao3wgg2rw1pi459 
       foreign key (user_id) 
       references users
2025-01-21 14:54:40 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       add constraint FK810a8gq30miyp6j1eub97qm6k 
       foreign key (user_id) 
       references users
2025-01-21 14:54:40 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       add constraint FKara19f2xv7ml3a24f50v6bsk2 
       foreign key (basket_id) 
       references basket
2025-01-21 14:54:40 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company 
       add constraint FKlgeojgfhu94pbgyev43gtwdyq 
       foreign key (address_id) 
       references addresses
2025-01-21 14:54:40 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company_socials_list 
       add constraint FKt90ivcl5f3phabfuqw6k3t9ow 
       foreign key (company_id) 
       references company
2025-01-21 14:54:41 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       add constraint FKlskx5ehjqd7u0dmumo4bhuliu 
       foreign key (door_id) 
       references doors
2025-01-21 14:54:41 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       add constraint FKajibco0vlgy0ngsyg33k0wb0u 
       foreign key (user_id) 
       references users
2025-01-21 14:54:41 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_images 
       add constraint FK33nbb6c7curx5h7rp8479q7ea 
       foreign key (door_id) 
       references doors
2025-01-21 14:54:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists doors 
       add constraint FKgbgrx2rwc3wskrr30uptj4tmy 
       foreign key (seller_id) 
       references users
2025-01-21 14:54:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists email_verifications 
       add constraint FKou1xuy3rdeao75p2x1v4v3xs 
       foreign key (user_id) 
       references users
2025-01-21 14:54:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       add constraint FKtncfqos5bn3jhhxs9m55tsgjk 
       foreign key (furniture_door_id) 
       references furniture_doors
2025-01-21 14:54:42 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKf50k9uqc2hstd0yl9uujhoq74 
       foreign key (door_id) 
       references doors
2025-01-21 14:54:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-01-21 14:54:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:54:43 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:54:44 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:54:45 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:54:45 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:54:45 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:54:45 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:54:45 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:54:45 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3ea716a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7cfa39d0, org.springframework.security.web.context.SecurityContextHolderFilter@1d98886d, org.springframework.security.web.header.HeaderWriterFilter@da2f2fc, org.springframework.web.filter.CorsFilter@4443ef5f, org.springframework.security.web.authentication.logout.LogoutFilter@3bf1321d, uz.pdp.config.filtr.MyFilter@45e35a0d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@51f95ca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33f957ae, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@149eb04a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a9b890b, org.springframework.security.web.access.ExceptionTranslationFilter@6515ac88, org.springframework.security.web.access.intercept.AuthorizationFilter@22fef226]
2025-01-21 14:54:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:54:46 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 29.654 seconds (process running for 29.994)
2025-01-21 14:54:46 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:54:47 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:54:47 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:54:48 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        furniture_doors fd1_0
2025-01-21 14:54:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.email=? 
        and u1_0.active=true
2025-01-21 14:54:49 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-01-21 14:54:49 [main] ERROR o.s.boot.SpringApplication - Application run failed
jakarta.validation.ConstraintViolationException: Validation failed for classes [uz.pdp.entity.User] during persist time for groups [jakarta.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='Phone number is required', propertyPath=phone, rootBeanClass=class uz.pdp.entity.User, messageTemplate='Phone number is required'}
]
	at org.hibernate.boot.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:151)
	at org.hibernate.boot.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:81)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:186)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:75)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:758)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy208.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy221.save(Unknown Source)
	at uz.pdp.config.DataInitializer.createSampleSeller(DataInitializer.java:134)
	at uz.pdp.config.DataInitializer.run(DataInitializer.java:104)
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:798)
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83)
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60)
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:782)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:341)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at uz.pdp.projectmodul10.ProjectModul10Application.main(ProjectModul10Application.java:56)
2025-01-21 14:54:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:54:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 14:54:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 14:56:24 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 691212 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 14:56:24 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 14:56:24 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 14:56:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:56:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 14:56:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 8 JPA repository interfaces.
2025-01-21 14:56:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 14:56:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 14:56:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-01-21 14:56:26 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 14:56:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 14:56:26 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 14:56:26 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 14:56:26 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 14:56:26 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1596 ms
2025-01-21 14:56:26 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 14:56:26 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 14:56:26 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 14:56:27 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 14:56:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 14:56:29 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5cfde2a4
2025-01-21 14:56:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 14:56:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 14:56:31 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 14:56:33 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists idx_user_email
2025-01-21 14:56:33 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-01-21 14:56:33 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "idx_user_email" of relation "users" does not exist, skipping
2025-01-21 14:56:33 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint idx_user_email unique (email)
2025-01-21 14:56:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 14:56:47 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 14:56:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 14:56:49 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 14:56:49 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 14:56:49 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 14:56:49 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 14:56:49 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 14:56:49 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2d628e22, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5786c476, org.springframework.security.web.context.SecurityContextHolderFilter@2470a8, org.springframework.security.web.header.HeaderWriterFilter@7c1ceb4a, org.springframework.web.filter.CorsFilter@4bfadf88, org.springframework.security.web.authentication.logout.LogoutFilter@2ce8935d, uz.pdp.config.filtr.MyFilter@6c8672b9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@25e531dd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d6e0b4d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ed3d61c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56bce46c, org.springframework.security.web.access.ExceptionTranslationFilter@1d071eac, org.springframework.security.web.access.intercept.AuthorizationFilter@1d425d1f]
2025-01-21 14:56:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 14:56:50 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 26.052 seconds (process running for 26.461)
2025-01-21 14:56:51 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 14:56:51 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        furniture_doors fd1_0
2025-01-21 14:56:51 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 14:56:51 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 14:56:51 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 14:56:52 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.email=? 
        and u1_0.active=true
2025-01-21 14:56:52 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:52 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 523 ms
2025-01-21 14:56:53 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:53 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:53 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:53 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:54 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:54 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:54 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:55 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:55 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:55 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:55 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:56 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:56 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:56 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:56 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:57 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:57 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:57 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:57 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:56:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 14:57:00 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:00 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:01 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:01 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:01 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:01 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:02 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:02 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:02 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:02 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:03 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:03 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:03 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:03 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 14:57:05 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:57:13 [http-nio-8080-exec-4] INFO  uz.pdp.controller.AuthController - Processing registration request for user: string
2025-01-21 14:57:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id)>0 
    from
        users u1_0 
    where
        u1_0.email=?
2025-01-21 14:57:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 14:57:14 [http-nio-8080-exec-4] INFO  uz.pdp.service.AuthService - Successfully registered new user: string@gmail.com
2025-01-21 14:57:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:57:30 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with name: string@gmail.com
	at uz.pdp.config.CustomUserDetailsService.lambda$0(CustomUserDetailsService.java:29)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at uz.pdp.config.CustomUserDetailsService.loadUserByUsername(CustomUserDetailsService.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:242)
	at jdk.proxy2/jdk.proxy2.$Proxy136.loadUserByUsername(Unknown Source)
	at uz.pdp.config.filtr.MyFilter.setUserToContext(MyFilter.java:47)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:39)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-01-21 14:57:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 14:57:30 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with name: string@gmail.com
	at uz.pdp.config.CustomUserDetailsService.lambda$0(CustomUserDetailsService.java:29)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at uz.pdp.config.CustomUserDetailsService.loadUserByUsername(CustomUserDetailsService.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:242)
	at jdk.proxy2/jdk.proxy2.$Proxy136.loadUserByUsername(Unknown Source)
	at uz.pdp.config.filtr.MyFilter.setUserToContext(MyFilter.java:47)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:39)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:642)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:340)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:277)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:362)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:308)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-01-21 14:57:30 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with name: string@gmail.com
	at uz.pdp.config.CustomUserDetailsService.lambda$0(CustomUserDetailsService.java:29)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at uz.pdp.config.CustomUserDetailsService.loadUserByUsername(CustomUserDetailsService.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:242)
	at jdk.proxy2/jdk.proxy2.$Proxy136.loadUserByUsername(Unknown Source)
	at uz.pdp.config.filtr.MyFilter.setUserToContext(MyFilter.java:47)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:39)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:642)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:340)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:277)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:362)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:308)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-01-21 15:00:00 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:00:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:00:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:00:05 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 703857 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:00:05 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:00:05 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:00:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:00:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:00:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 8 JPA repository interfaces.
2025-01-21 15:00:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:00:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:00:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 15:00:06 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:00:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:00:06 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:00:06 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:00:06 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:00:06 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1668 ms
2025-01-21 15:00:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:00:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:00:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:00:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:00:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:00:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@49c72fb7
2025-01-21 15:00:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:00:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:00:11 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:00:27 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:00:27 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:00:29 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:00:29 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:00:29 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:00:29 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:00:30 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:00:30 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:00:30 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6ed574d3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@10cd8b02, org.springframework.security.web.context.SecurityContextHolderFilter@2b7987d7, org.springframework.security.web.header.HeaderWriterFilter@1f5e3dc0, org.springframework.web.filter.CorsFilter@54d79178, org.springframework.security.web.authentication.logout.LogoutFilter@74ef575b, uz.pdp.config.filtr.MyFilter@66a99584, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7c3b6e89, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5aba9e8a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aac1a01, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d610dfd, org.springframework.security.web.access.ExceptionTranslationFilter@33f957ae, org.springframework.security.web.access.intercept.AuthorizationFilter@392e2e29]
2025-01-21 15:00:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:00:31 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 26.419 seconds (process running for 26.753)
2025-01-21 15:00:31 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:00:32 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:00:32 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:00:32 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:00:32 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 15:00:34 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 520 ms
2025-01-21 15:01:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:01:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket
        (user_id) 
    values
        (?)
2025-01-21 15:01:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:01:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:01:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.furniture_door_id,
        i1_0.image_url 
    from
        furniture_door_images i1_0 
    where
        i1_0.furniture_door_id=?
2025-01-21 15:01:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:01:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, image, item_id, name, price, quantity, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:01:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:01:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:01:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.furniture_door_id,
        i1_0.image_url 
    from
        furniture_door_images i1_0 
    where
        i1_0.furniture_door_id=?
2025-01-21 15:01:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:01:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, image, item_id, name, price, quantity, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:01:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:41 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 2
2025-01-21 15:01:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:01:42 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieved door: Victorian Gorgeous Pine Door
2025-01-21 15:01:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:01:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:01:42 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 2
2025-01-21 15:01:42 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieved door: Victorian Gorgeous Pine Door
2025-01-21 15:01:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 15:01:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:01:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, image, item_id, name, price, quantity, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:02:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:02:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:02:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:02:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:02:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:02:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:02:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:02:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:02:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:02:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:02:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:02:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:02:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:02:22 [http-nio-8080-exec-7] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 2
2025-01-21 15:02:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:02:23 [http-nio-8080-exec-7] INFO  uz.pdp.service.DoorService - Retrieved door: Victorian Gorgeous Pine Door
2025-01-21 15:02:23 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 3
2025-01-21 15:02:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:02:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:02:23 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 1
2025-01-21 15:02:23 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 1
2025-01-21 15:02:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:02:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:02:24 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 2
2025-01-21 15:02:24 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 2
2025-01-21 15:02:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:02:24 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 3
2025-01-21 15:02:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:02:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:02:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:02:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:02:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:02:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:02:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:02:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:02:26 [http-nio-8080-exec-7] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 15:02:26 [http-nio-8080-exec-7] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?], SQL: delete from basket_item where id=?
2025-01-21 15:02:27 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Cancelling order ID: 1
2025-01-21 15:02:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 15:02:27 [http-nio-8080-exec-7] WARN  uz.pdp.service.OrderService - Cannot cancel order 1 with status PENDING
2025-01-21 15:02:27 [http-nio-8080-exec-7] ERROR uz.pdp.service.OrderService - Error cancelling order 1: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:02:27 [http-nio-8080-exec-7] ERROR uz.pdp.controller.BasketController - Failed to cancel order 1 during error handling: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:02:27 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Cancelling order ID: 2
2025-01-21 15:02:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 15:02:28 [http-nio-8080-exec-7] WARN  uz.pdp.service.OrderService - Cannot cancel order 2 with status PENDING
2025-01-21 15:02:28 [http-nio-8080-exec-7] ERROR uz.pdp.service.OrderService - Error cancelling order 2: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:02:28 [http-nio-8080-exec-7] ERROR uz.pdp.controller.BasketController - Failed to cancel order 2 during error handling: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:02:28 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Cancelling order ID: 3
2025-01-21 15:02:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 15:02:28 [http-nio-8080-exec-7] WARN  uz.pdp.service.OrderService - Cannot cancel order 3 with status PENDING
2025-01-21 15:02:28 [http-nio-8080-exec-7] ERROR uz.pdp.service.OrderService - Error cancelling order 3: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:02:28 [http-nio-8080-exec-7] ERROR uz.pdp.controller.BasketController - Failed to cancel order 3 during error handling: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:02:28 [http-nio-8080-exec-7] ERROR uz.pdp.controller.BasketController - Checkout failed: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
org.springframework.orm.ObjectOptimisticLockingFailureException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:328)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.clearBasket(<generated>)
	at uz.pdp.controller.BasketController.checkout(BasketController.java:250)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.checkRowCounts(BatchImpl.java:321)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:285)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 159 common frames omitted
2025-01-21 15:07:28 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m18s218ms387µs261ns).
2025-01-21 15:08:48 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m48s169ms260µs981ns).
2025-01-21 15:16:21 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 10349 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:16:21 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:16:21 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:16:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:16:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:16:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 8 JPA repository interfaces.
2025-01-21 15:16:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:16:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:16:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-01-21 15:16:22 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:16:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:16:22 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:16:22 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:16:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:16:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1403 ms
2025-01-21 15:16:22 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:16:22 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:16:22 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:16:23 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:16:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:16:25 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c6653e
2025-01-21 15:16:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:16:26 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:16:27 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:16:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:16:43 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:16:44 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:16:44 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:16:44 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:16:44 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:16:45 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:16:45 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:16:45 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d729736, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@415ba14e, org.springframework.security.web.context.SecurityContextHolderFilter@5786c476, org.springframework.security.web.header.HeaderWriterFilter@73ee86a, org.springframework.web.filter.CorsFilter@2919cfc7, org.springframework.security.web.authentication.logout.LogoutFilter@6f0766d, uz.pdp.config.filtr.MyFilter@55574295, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@40d9f000, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7dcf481b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e24fc5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ebe695b, org.springframework.security.web.access.ExceptionTranslationFilter@77a8ec44, org.springframework.security.web.access.intercept.AuthorizationFilter@6519c4f4]
2025-01-21 15:16:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:16:45 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 24.934 seconds (process running for 25.193)
2025-01-21 15:16:45 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:16:46 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:16:47 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:16:47 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:16:47 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 15:16:51 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 478 ms
2025-01-21 15:17:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:17:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:17:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:17:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:17:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:17:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:17:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:17:22 [http-nio-8080-exec-7] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 2
2025-01-21 15:17:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:17:23 [http-nio-8080-exec-7] INFO  uz.pdp.service.DoorService - Retrieved door: Victorian Gorgeous Pine Door
2025-01-21 15:17:23 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 3
2025-01-21 15:17:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:17:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:17:23 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 4
2025-01-21 15:17:24 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 1
2025-01-21 15:17:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:17:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:17:24 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 5
2025-01-21 15:17:24 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 2
2025-01-21 15:17:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:17:25 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 6
2025-01-21 15:17:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:17:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:17:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:17:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:17:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:17:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:17:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:17:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:17:27 [http-nio-8080-exec-7] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 15:17:27 [http-nio-8080-exec-7] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?], SQL: delete from basket_item where id=?
2025-01-21 15:17:27 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Cancelling order ID: 4
2025-01-21 15:17:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 15:17:27 [http-nio-8080-exec-7] WARN  uz.pdp.service.OrderService - Cannot cancel order 4 with status PENDING
2025-01-21 15:17:27 [http-nio-8080-exec-7] ERROR uz.pdp.service.OrderService - Error cancelling order 4: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:17:27 [http-nio-8080-exec-7] ERROR uz.pdp.controller.BasketController - Failed to cancel order 4 during error handling: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:17:27 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Cancelling order ID: 5
2025-01-21 15:17:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 15:17:28 [http-nio-8080-exec-7] WARN  uz.pdp.service.OrderService - Cannot cancel order 5 with status PENDING
2025-01-21 15:17:28 [http-nio-8080-exec-7] ERROR uz.pdp.service.OrderService - Error cancelling order 5: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:17:28 [http-nio-8080-exec-7] ERROR uz.pdp.controller.BasketController - Failed to cancel order 5 during error handling: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:17:28 [http-nio-8080-exec-7] INFO  uz.pdp.service.OrderService - Cancelling order ID: 6
2025-01-21 15:17:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 15:17:28 [http-nio-8080-exec-7] WARN  uz.pdp.service.OrderService - Cannot cancel order 6 with status PENDING
2025-01-21 15:17:28 [http-nio-8080-exec-7] ERROR uz.pdp.service.OrderService - Error cancelling order 6: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:17:29 [http-nio-8080-exec-7] ERROR uz.pdp.controller.BasketController - Failed to cancel order 6 during error handling: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:17:29 [http-nio-8080-exec-7] ERROR uz.pdp.controller.BasketController - Checkout failed: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
org.springframework.orm.ObjectOptimisticLockingFailureException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:328)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.clearBasket(<generated>)
	at uz.pdp.controller.BasketController.checkout(BasketController.java:250)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.checkRowCounts(BatchImpl.java:321)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:285)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 159 common frames omitted
2025-01-21 15:19:12 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:19:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:19:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:19:58 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 28083 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:19:58 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:19:58 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:19:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:19:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:19:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 8 JPA repository interfaces.
2025-01-21 15:19:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:19:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:19:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 15:19:59 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:19:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:19:59 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:19:59 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:19:59 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:19:59 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1550 ms
2025-01-21 15:19:59 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:20:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:20:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:20:00 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:20:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:20:03 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3f910f36
2025-01-21 15:20:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:20:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:20:04 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:20:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:20:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:20:22 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:20:22 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:20:22 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:20:22 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:20:23 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:20:23 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:20:23 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@bb31486, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41afd8e0, org.springframework.security.web.context.SecurityContextHolderFilter@4ecd2968, org.springframework.security.web.header.HeaderWriterFilter@aac1a01, org.springframework.web.filter.CorsFilter@3d5af086, org.springframework.security.web.authentication.logout.LogoutFilter@34954ad, uz.pdp.config.filtr.MyFilter@21579b35, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@521a00fb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22bd8120, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d071eac, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d1e0b78, org.springframework.security.web.access.ExceptionTranslationFilter@3759967f, org.springframework.security.web.access.intercept.AuthorizationFilter@518cd29]
2025-01-21 15:20:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:20:24 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 26.826 seconds (process running for 27.142)
2025-01-21 15:20:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:20:25 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:20:26 [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:20:26 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:20:26 [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 15:20:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:20:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:20:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:20:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:20:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:20:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:20:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:20:31 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 2
2025-01-21 15:20:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:20:31 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Victorian Gorgeous Pine Door
2025-01-21 15:20:31 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 3
2025-01-21 15:20:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:20:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:20:32 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 7
2025-01-21 15:20:32 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 1
2025-01-21 15:20:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:20:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:20:33 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 8
2025-01-21 15:20:33 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating order for user ID: 3 and door ID: 2
2025-01-21 15:20:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (contact_phone, delivery_address, door_id, order_date, order_type, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:20:33 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Order created successfully with ID: 9
2025-01-21 15:20:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:20:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:20:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:20:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:20:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:20:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:20:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:20:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:20:35 [http-nio-8080-exec-1] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 15:20:35 [http-nio-8080-exec-1] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?], SQL: delete from basket_item where id=?
2025-01-21 15:20:36 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Cancelling order ID: 7
2025-01-21 15:20:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 15:20:36 [http-nio-8080-exec-1] WARN  uz.pdp.service.OrderService - Cannot cancel order 7 with status PENDING
2025-01-21 15:20:36 [http-nio-8080-exec-1] ERROR uz.pdp.service.OrderService - Error cancelling order 7: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:20:36 [http-nio-8080-exec-1] ERROR uz.pdp.controller.BasketController - Failed to cancel order 7 during error handling: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:20:36 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Cancelling order ID: 8
2025-01-21 15:20:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 15:20:37 [http-nio-8080-exec-1] WARN  uz.pdp.service.OrderService - Cannot cancel order 8 with status PENDING
2025-01-21 15:20:37 [http-nio-8080-exec-1] ERROR uz.pdp.service.OrderService - Error cancelling order 8: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:20:37 [http-nio-8080-exec-1] ERROR uz.pdp.controller.BasketController - Failed to cancel order 8 during error handling: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:20:37 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Cancelling order ID: 9
2025-01-21 15:20:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.contact_phone,
        o1_0.delivery_address,
        o1_0.door_id,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-01-21 15:20:37 [http-nio-8080-exec-1] WARN  uz.pdp.service.OrderService - Cannot cancel order 9 with status PENDING
2025-01-21 15:20:37 [http-nio-8080-exec-1] ERROR uz.pdp.service.OrderService - Error cancelling order 9: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:20:37 [http-nio-8080-exec-1] ERROR uz.pdp.controller.BasketController - Failed to cancel order 9 during error handling: 400 BAD_REQUEST "Only pending or processing orders can be cancelled"
2025-01-21 15:20:37 [http-nio-8080-exec-1] ERROR uz.pdp.controller.BasketController - Checkout failed: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
org.springframework.orm.ObjectOptimisticLockingFailureException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:328)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.clearBasket(<generated>)
	at uz.pdp.controller.BasketController.checkout(BasketController.java:250)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.checkRowCounts(BatchImpl.java:321)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:285)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 159 common frames omitted
2025-01-21 15:23:25 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:23:25 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:23:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:27:55 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 64986 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:27:55 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:27:55 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:27:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:27:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:27:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 8 JPA repository interfaces.
2025-01-21 15:27:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:27:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:27:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 15:27:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:27:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:27:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:27:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:27:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:27:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1489 ms
2025-01-21 15:27:57 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:27:57 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:27:57 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:27:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:27:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:28:00 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f83467
2025-01-21 15:28:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:28:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:28:02 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:28:03 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add column comment varchar(1000)
2025-01-21 15:28:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add column customer_name varchar(255) not null
2025-01-21 15:28:04 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists orders 
       add column customer_name varchar(255) not null" via JDBC [ERROR: column "customer_name" of relation "orders" contains null values]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists orders 
       add column customer_name varchar(255) not null" via JDBC [ERROR: column "customer_name" of relation "orders" contains null values]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1232)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at uz.pdp.projectmodul10.ProjectModul10Application.main(ProjectModul10Application.java:56)
Caused by: org.postgresql.util.PSQLException: ERROR: column "customer_name" of relation "orders" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-01-21 15:28:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add column delivery_notes varchar(1000)
2025-01-21 15:28:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add column email varchar(255) not null
2025-01-21 15:28:04 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists orders 
       add column email varchar(255) not null" via JDBC [ERROR: column "email" of relation "orders" contains null values]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists orders 
       add column email varchar(255) not null" via JDBC [ERROR: column "email" of relation "orders" contains null values]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1232)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at uz.pdp.projectmodul10.ProjectModul10Application.main(ProjectModul10Application.java:56)
Caused by: org.postgresql.util.PSQLException: ERROR: column "email" of relation "orders" contains null values
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:335)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:321)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:297)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:292)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-01-21 15:28:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add column installation_notes varchar(1000)
2025-01-21 15:28:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add column preferred_delivery_time timestamp(6) with time zone
2025-01-21 15:28:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:28:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:28:22 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:28:22 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:28:22 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:28:22 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:28:23 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:28:23 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:28:23 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@72f97666, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67adcce7, org.springframework.security.web.context.SecurityContextHolderFilter@41f2b5f6, org.springframework.security.web.header.HeaderWriterFilter@44aabccd, org.springframework.web.filter.CorsFilter@6e860133, org.springframework.security.web.authentication.logout.LogoutFilter@51dd465a, uz.pdp.config.filtr.MyFilter@3703a400, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@524ecfda, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ef996b8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42ade44a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14d8046d, org.springframework.security.web.access.ExceptionTranslationFilter@16f4777d, org.springframework.security.web.access.intercept.AuthorizationFilter@46979fd2]
2025-01-21 15:28:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:28:23 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 28.406 seconds (process running for 28.729)
2025-01-21 15:28:24 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:28:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:28:25 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:28:25 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:28:25 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-01-21 15:28:27 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:28:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:28:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:28:30 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 68084 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:28:30 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:28:30 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:28:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:28:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:28:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 8 JPA repository interfaces.
2025-01-21 15:28:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:28:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:28:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 15:28:31 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:28:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:28:31 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:28:31 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:28:31 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:28:31 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1401 ms
2025-01-21 15:28:31 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:28:31 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:28:31 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:28:32 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:28:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:28:34 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68024e57
2025-01-21 15:28:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:28:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:28:35 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:28:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists address_social_links 
       drop constraint if exists FKf8co3916tiiox4iohci7ybiyg
2025-01-21 15:28:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       drop constraint if exists FK7wf86ejdl44syummkme09y06f
2025-01-21 15:28:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       drop constraint if exists FK1fa36y2oqhao3wgg2rw1pi459
2025-01-21 15:28:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       drop constraint if exists FK810a8gq30miyp6j1eub97qm6k
2025-01-21 15:28:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       drop constraint if exists FKara19f2xv7ml3a24f50v6bsk2
2025-01-21 15:28:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company 
       drop constraint if exists FKlgeojgfhu94pbgyev43gtwdyq
2025-01-21 15:28:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company_socials_list 
       drop constraint if exists FKt90ivcl5f3phabfuqw6k3t9ow
2025-01-21 15:28:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       drop constraint if exists FKlskx5ehjqd7u0dmumo4bhuliu
2025-01-21 15:28:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       drop constraint if exists FKajibco0vlgy0ngsyg33k0wb0u
2025-01-21 15:28:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_images 
       drop constraint if exists FK33nbb6c7curx5h7rp8479q7ea
2025-01-21 15:28:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists doors 
       drop constraint if exists FKgbgrx2rwc3wskrr30uptj4tmy
2025-01-21 15:28:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists email_verifications 
       drop constraint if exists FKou1xuy3rdeao75p2x1v4v3xs
2025-01-21 15:28:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       drop constraint if exists FKtncfqos5bn3jhhxs9m55tsgjk
2025-01-21 15:28:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       drop constraint if exists FKf50k9uqc2hstd0yl9uujhoq74
2025-01-21 15:28:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       drop constraint if exists FK32ql8ubntj5uh44ph9659tiih
2025-01-21 15:28:40 [main] DEBUG org.hibernate.SQL - 
    drop table if exists address_social_links cascade
2025-01-21 15:28:40 [main] DEBUG org.hibernate.SQL - 
    drop table if exists addresses cascade
2025-01-21 15:28:40 [main] DEBUG org.hibernate.SQL - 
    drop table if exists basket cascade
2025-01-21 15:28:40 [main] DEBUG org.hibernate.SQL - 
    drop table if exists basket_item cascade
2025-01-21 15:28:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists company cascade
2025-01-21 15:28:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists company_socials_list cascade
2025-01-21 15:28:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists door_history cascade
2025-01-21 15:28:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists door_images cascade
2025-01-21 15:28:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists doors cascade
2025-01-21 15:28:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists email_verifications cascade
2025-01-21 15:28:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists furniture_door_images cascade
2025-01-21 15:28:42 [main] DEBUG org.hibernate.SQL - 
    drop table if exists furniture_doors cascade
2025-01-21 15:28:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists locations cascade
2025-01-21 15:28:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade
2025-01-21 15:28:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists ticket cascade
2025-01-21 15:28:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-01-21 15:28:44 [main] DEBUG org.hibernate.SQL - 
    create table address_social_links (
        address_id bigint not null,
        link varchar(255),
        social_type varchar(255) not null check (social_type in ('FACEBOOK','TWITTER','INSTAGRAM','LINKEDIN','TELEGRAM')),
        primary key (address_id, social_type)
    )
2025-01-21 15:28:44 [main] DEBUG org.hibernate.SQL - 
    create table addresses (
        is_default boolean not null,
        id bigserial not null,
        location_id bigint unique,
        user_id bigint,
        city varchar(255),
        email varchar(255),
        name varchar(255),
        phone_number varchar(255),
        street varchar(255),
        working_hours varchar(255),
        primary key (id)
    )
2025-01-21 15:28:44 [main] DEBUG org.hibernate.SQL - 
    create table basket (
        id bigserial not null,
        user_id bigint unique,
        primary key (id)
    )
2025-01-21 15:28:45 [main] DEBUG org.hibernate.SQL - 
    create table basket_item (
        price float(53) not null,
        quantity integer not null,
        basket_id bigint,
        id bigserial not null,
        item_id bigint,
        image varchar(255),
        name varchar(255),
        type varchar(255) check (type in ('DOOR','ACCESSORY')),
        primary key (id)
    )
2025-01-21 15:28:45 [main] DEBUG org.hibernate.SQL - 
    create table company (
        work_time date,
        address_id bigint unique,
        id bigserial not null,
        email varchar(255),
        name varchar(255),
        phone varchar(255),
        primary key (id)
    )
2025-01-21 15:28:45 [main] DEBUG org.hibernate.SQL - 
    create table company_socials_list (
        company_id bigint not null,
        socials_list varchar(255) check (socials_list in ('FACEBOOK','TWITTER','INSTAGRAM','LINKEDIN','TELEGRAM'))
    )
2025-01-21 15:28:45 [main] DEBUG org.hibernate.SQL - 
    create table door_history (
        accessed_at timestamp(6),
        door_id bigint not null,
        id bigserial not null,
        user_id bigint not null,
        primary key (id)
    )
2025-01-21 15:28:46 [main] DEBUG org.hibernate.SQL - 
    create table door_images (
        door_id bigint not null,
        images varchar(255)
    )
2025-01-21 15:28:46 [main] DEBUG org.hibernate.SQL - 
    create table doors (
        active boolean not null,
        custom_height float(53),
        custom_width float(53),
        final_price float(53),
        is_custom_color boolean,
        price float(53),
        warranty_years integer,
        id bigserial not null,
        seller_id bigint,
        color varchar(255) check (color in ('WHITE','BROWN','BLACK','CUSTOM')),
        description varchar(255),
        manufacturer varchar(255),
        material varchar(255),
        name varchar(255),
        size varchar(255) check (size in ('SIZE_200x2000','SIZE_300x2000','SIZE_400x2000','SIZE_500x2000','SIZE_600x2000','SIZE_700x2000','SIZE_800x2000','SIZE_900x2000','SIZE_1000x2000','SIZE_1100x2000','SIZE_1200x2000','CUSTOM')),
        status varchar(255) not null check (status in ('AVAILABLE','PENDING','SOLD','INACTIVE','UNAVAILABLE')),
        primary key (id)
    )
2025-01-21 15:28:46 [main] DEBUG org.hibernate.SQL - 
    create table email_verifications (
        verified boolean not null,
        created_at timestamp(6),
        expiry_time timestamp(6) not null,
        id bigserial not null,
        updated_at timestamp(6),
        user_id bigint not null,
        type varchar(255) not null check (type in ('SELLER_REQUEST','PASSWORD_RESET','EMAIL_CONFIRMATION')),
        verification_code varchar(255) not null,
        primary key (id)
    )
2025-01-21 15:28:46 [main] DEBUG org.hibernate.SQL - 
    create table furniture_door_images (
        furniture_door_id bigint not null,
        image_url varchar(255)
    )
2025-01-21 15:28:47 [main] DEBUG org.hibernate.SQL - 
    create table furniture_doors (
        price float(53) not null,
        stock_quantity integer not null,
        id bigserial not null,
        description varchar(255),
        dimensions varchar(255),
        furniture_type varchar(255) not null check (furniture_type in ('LOCK','HANDLE','HINGES','AUTOMATIC_CLOSER','NO_FURNITURE')),
        material varchar(255) not null,
        name varchar(255) not null,
        primary key (id)
    )
2025-01-21 15:28:47 [main] DEBUG org.hibernate.SQL - 
    create table locations (
        latitude float(53),
        longitude float(53),
        id bigserial not null,
        marker_title varchar(255),
        primary key (id)
    )
2025-01-21 15:28:47 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        door_id bigint not null,
        id bigserial not null,
        order_date timestamp(6) with time zone not null,
        preferred_delivery_time timestamp(6) with time zone,
        user_id bigint not null,
        comment varchar(1000),
        delivery_notes varchar(1000),
        installation_notes varchar(1000),
        contact_phone varchar(255) not null,
        customer_name varchar(255) not null,
        delivery_address varchar(255) not null,
        email varchar(255) not null,
        order_type varchar(255) not null check (order_type in ('FULL_SET','POLOTNO')),
        status varchar(255) not null check (status in ('PENDING','CONFIRMED','PROCESSING','SHIPPED','DELIVERED','CANCELLED')),
        primary key (id)
    )
2025-01-21 15:28:48 [main] DEBUG org.hibernate.SQL - 
    create table ticket (
        id bigserial not null,
        user_id bigint,
        primary key (id)
    )
2025-01-21 15:28:48 [main] DEBUG org.hibernate.SQL - 
    create table users (
        active boolean not null,
        seller_request_pending boolean not null,
        id bigserial not null,
        email varchar(255) unique,
        lastname varchar(255),
        name varchar(255),
        password varchar(255),
        phone varchar(255) not null,
        role varchar(255) not null check (role in ('USER','SELLER','ADMIN')),
        primary key (id)
    )
2025-01-21 15:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_material 
       on doors (material)
2025-01-21 15:28:48 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_manufacturer 
       on doors (manufacturer)
2025-01-21 15:28:49 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_price 
       on doors (price)
2025-01-21 15:28:49 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_name 
       on doors (name)
2025-01-21 15:28:49 [main] DEBUG org.hibernate.SQL - 
    create index idx_door_active_status 
       on doors (active, status)
2025-01-21 15:28:49 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_user 
       on orders (user_id)
2025-01-21 15:28:50 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_door 
       on orders (door_id)
2025-01-21 15:28:50 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_status_date 
       on orders (status, order_date)
2025-01-21 15:28:50 [main] DEBUG org.hibernate.SQL - 
    create index idx_order_type_date 
       on orders (order_type, order_date)
2025-01-21 15:28:50 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_name 
       on users (name)
2025-01-21 15:28:51 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_phone 
       on users (phone)
2025-01-21 15:28:51 [main] DEBUG org.hibernate.SQL - 
    create index idx_user_role_active 
       on users (role, active)
2025-01-21 15:28:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists address_social_links 
       add constraint FKf8co3916tiiox4iohci7ybiyg 
       foreign key (address_id) 
       references addresses
2025-01-21 15:28:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       add constraint FK7wf86ejdl44syummkme09y06f 
       foreign key (location_id) 
       references locations
2025-01-21 15:28:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists addresses 
       add constraint FK1fa36y2oqhao3wgg2rw1pi459 
       foreign key (user_id) 
       references users
2025-01-21 15:28:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket 
       add constraint FK810a8gq30miyp6j1eub97qm6k 
       foreign key (user_id) 
       references users
2025-01-21 15:28:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       add constraint FKara19f2xv7ml3a24f50v6bsk2 
       foreign key (basket_id) 
       references basket
2025-01-21 15:28:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company 
       add constraint FKlgeojgfhu94pbgyev43gtwdyq 
       foreign key (address_id) 
       references addresses
2025-01-21 15:28:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists company_socials_list 
       add constraint FKt90ivcl5f3phabfuqw6k3t9ow 
       foreign key (company_id) 
       references company
2025-01-21 15:28:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       add constraint FKlskx5ehjqd7u0dmumo4bhuliu 
       foreign key (door_id) 
       references doors
2025-01-21 15:28:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_history 
       add constraint FKajibco0vlgy0ngsyg33k0wb0u 
       foreign key (user_id) 
       references users
2025-01-21 15:28:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists door_images 
       add constraint FK33nbb6c7curx5h7rp8479q7ea 
       foreign key (door_id) 
       references doors
2025-01-21 15:28:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists doors 
       add constraint FKgbgrx2rwc3wskrr30uptj4tmy 
       foreign key (seller_id) 
       references users
2025-01-21 15:28:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists email_verifications 
       add constraint FKou1xuy3rdeao75p2x1v4v3xs 
       foreign key (user_id) 
       references users
2025-01-21 15:28:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists furniture_door_images 
       add constraint FKtncfqos5bn3jhhxs9m55tsgjk 
       foreign key (furniture_door_id) 
       references furniture_doors
2025-01-21 15:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FKf50k9uqc2hstd0yl9uujhoq74 
       foreign key (door_id) 
       references doors
2025-01-21 15:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-01-21 15:28:55 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:28:56 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:28:57 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:28:57 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:28:57 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:28:57 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:28:58 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:28:58 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:28:58 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5ed164bf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5719add3, org.springframework.security.web.context.SecurityContextHolderFilter@3aed0f81, org.springframework.security.web.header.HeaderWriterFilter@7ae70f17, org.springframework.web.filter.CorsFilter@3cfce6be, org.springframework.security.web.authentication.logout.LogoutFilter@6c85803d, uz.pdp.config.filtr.MyFilter@12765ebd, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@24203248, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4f416fe3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@389a30e4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15bd40b6, org.springframework.security.web.access.ExceptionTranslationFilter@69b1e76b, org.springframework.security.web.access.intercept.AuthorizationFilter@55e8eeb2]
2025-01-21 15:28:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:28:59 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 29.213 seconds (process running for 29.489)
2025-01-21 15:28:59 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:28:59 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:00 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:29:00 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        furniture_doors fd1_0
2025-01-21 15:29:01 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.email=? 
        and u1_0.active=true
2025-01-21 15:29:01 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:02 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:29:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:29:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 15:29:02 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:02 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:02 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:03 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:03 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 567 ms
2025-01-21 15:29:03 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:03 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:03 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:04 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:05 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:06 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:06 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:06 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:06 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:07 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:07 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:07 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:07 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        doors
        (active, color, custom_height, custom_width, description, final_price, is_custom_color, manufacturer, material, name, price, seller_id, size, status, warranty_years) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:08 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:09 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        door_images
        (door_id, images) 
    values
        (?, ?)
2025-01-21 15:29:10 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:10 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:10 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:11 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:11 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:11 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:11 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:12 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:12 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:12 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:12 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:13 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:13 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:13 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:13 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_doors
        (description, dimensions, furniture_type, material, name, price, stock_quantity) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        furniture_door_images
        (furniture_door_id, image_url) 
    values
        (?, ?)
2025-01-21 15:29:27 [http-nio-8080-exec-7] INFO  uz.pdp.controller.AuthController - Processing registration request for user: string
2025-01-21 15:29:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id)>0 
    from
        users u1_0 
    where
        u1_0.email=?
2025-01-21 15:29:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (active, email, lastname, name, password, phone, role, seller_request_pending) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:28 [http-nio-8080-exec-7] INFO  uz.pdp.service.AuthService - Successfully registered new user: string@gmail.com
2025-01-21 15:29:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:29:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:29:43 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 15:29:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:29:44 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 15:29:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:29:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:29:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket
        (user_id) 
    values
        (?)
2025-01-21 15:29:44 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 15:29:44 [http-nio-8080-exec-10] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 15:29:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 15:29:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, image, item_id, name, price, quantity, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:29:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:29:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:30:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:30:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:30:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:30:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.furniture_door_id,
        i1_0.image_url 
    from
        furniture_door_images i1_0 
    where
        i1_0.furniture_door_id=?
2025-01-21 15:30:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:30:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        basket_item
        (basket_id, image, item_id, name, price, quantity, type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:32:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:32:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:32:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:32:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:32:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:32:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:32:17 [http-nio-8080-exec-9] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 15:32:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:32:17 [http-nio-8080-exec-9] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 15:32:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:32:18 [http-nio-8080-exec-9] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 15:32:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:32:18 [http-nio-8080-exec-9] INFO  uz.pdp.service.OrderService - Created order 1 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:32:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:32:18 [http-nio-8080-exec-9] INFO  uz.pdp.service.OrderService - Created order 2 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:32:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:32:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:32:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        bi1_0.id,
        bi1_0.basket_id,
        bi1_0.image,
        bi1_0.item_id,
        bi1_0.name,
        bi1_0.price,
        bi1_0.quantity,
        bi1_0.type 
    from
        basket_item bi1_0 
    where
        bi1_0.id=?
2025-01-21 15:32:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:32:19 [http-nio-8080-exec-9] DEBUG uz.pdp.service.BasketService - Successfully removed item 1 from basket
2025-01-21 15:32:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        bi1_0.id,
        bi1_0.basket_id,
        bi1_0.image,
        bi1_0.item_id,
        bi1_0.name,
        bi1_0.price,
        bi1_0.quantity,
        bi1_0.type 
    from
        basket_item bi1_0 
    where
        bi1_0.id=?
2025-01-21 15:32:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        id = ?
2025-01-21 15:32:20 [http-nio-8080-exec-9] DEBUG uz.pdp.service.BasketService - Successfully removed item 2 from basket
2025-01-21 15:32:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:32:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:32:20 [http-nio-8080-exec-9] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 15:32:20 [http-nio-8080-exec-9] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?], SQL: delete from basket_item where id=?
2025-01-21 15:32:21 [http-nio-8080-exec-9] ERROR uz.pdp.controller.BasketController - Checkout failed: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
org.springframework.orm.ObjectOptimisticLockingFailureException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:328)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.clearBasket(<generated>)
	at uz.pdp.controller.BasketController.checkout(BasketController.java:239)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.checkRowCounts(BatchImpl.java:321)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:285)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 159 common frames omitted
2025-01-21 15:38:15 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:38:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:38:16 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:38:19 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 116219 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:38:19 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:38:19 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:38:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:38:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:38:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 8 JPA repository interfaces.
2025-01-21 15:38:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:38:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:38:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 15:38:20 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:38:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:38:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:38:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:38:20 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:38:20 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1584 ms
2025-01-21 15:38:21 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:38:21 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:38:21 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:38:21 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:38:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:38:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71f86562
2025-01-21 15:38:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:38:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:38:25 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:38:28 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists idx_user_email
2025-01-21 15:38:28 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-01-21 15:38:28 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "idx_user_email" of relation "users" does not exist, skipping
2025-01-21 15:38:28 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint idx_user_email unique (email)
2025-01-21 15:38:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:38:42 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:38:44 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:38:44 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:38:44 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:38:44 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:38:45 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:38:45 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:38:45 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@36311721, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@92f5f61, org.springframework.security.web.context.SecurityContextHolderFilter@5fce571d, org.springframework.security.web.header.HeaderWriterFilter@63f0caea, org.springframework.web.filter.CorsFilter@340bdd5c, org.springframework.security.web.authentication.logout.LogoutFilter@29a8d39a, uz.pdp.config.filtr.MyFilter@5ac7550a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5bb048a2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5baded37, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22fef226, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43f223c6, org.springframework.security.web.access.ExceptionTranslationFilter@6523a69a, org.springframework.security.web.access.intercept.AuthorizationFilter@60b84d6f]
2025-01-21 15:38:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:38:46 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 27.188 seconds (process running for 27.586)
2025-01-21 15:38:46 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:38:46 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:38:47 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:38:47 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:38:47 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 15:38:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:38:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:38:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:38:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:38:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:38:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:38:58 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 15:38:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:38:58 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 15:38:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:38:59 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 15:38:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:38:59 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 3 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:38:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:38:59 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 4 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:39:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:39:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:39:00 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Clearing basket with 2 items
2025-01-21 15:39:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        basket_id = ?
2025-01-21 15:39:00 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Successfully cleared basket
2025-01-21 15:39:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:39:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:39:01 [http-nio-8080-exec-1] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 15:39:01 [http-nio-8080-exec-1] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?], SQL: delete from basket_item where id=?
2025-01-21 15:39:01 [http-nio-8080-exec-1] ERROR uz.pdp.controller.BasketController - Checkout failed: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
org.springframework.orm.ObjectOptimisticLockingFailureException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:328)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.clearBasket(<generated>)
	at uz.pdp.controller.BasketController.checkout(BasketController.java:239)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1; statement executed: delete from basket_item where id=?
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.checkRowCounts(BatchImpl.java:321)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:285)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 159 common frames omitted
2025-01-21 15:40:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:40:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:40:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:40:55 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 129674 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:40:55 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:40:55 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:40:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:40:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:40:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 8 JPA repository interfaces.
2025-01-21 15:40:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:40:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:40:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 15:40:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:40:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:40:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:40:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:40:56 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:40:56 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1398 ms
2025-01-21 15:40:57 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:40:57 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:40:57 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:40:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:40:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:40:59 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14f254f
2025-01-21 15:40:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:41:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:41:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:41:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists basket_item 
       add column version bigint
2025-01-21 15:41:16 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:41:17 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:41:19 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:41:19 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:41:19 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:41:19 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:41:20 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:41:20 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:41:20 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7f54ea45, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3964ed5, org.springframework.security.web.context.SecurityContextHolderFilter@2c9fafbc, org.springframework.security.web.header.HeaderWriterFilter@15ad2c0e, org.springframework.web.filter.CorsFilter@6c19ccb8, org.springframework.security.web.authentication.logout.LogoutFilter@4f64a692, uz.pdp.config.filtr.MyFilter@44dcc0e4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@51d775f8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3759d8e5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1838e02, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@60b84d6f, org.springframework.security.web.access.ExceptionTranslationFilter@1d3434ce, org.springframework.security.web.access.intercept.AuthorizationFilter@1f4f299]
2025-01-21 15:41:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:41:20 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.714 seconds (process running for 26.113)
2025-01-21 15:41:20 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:41:21 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:41:22 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:41:22 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:41:22 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 15:43:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:43:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:43:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:43:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:43:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:43:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type,
        i1_0.version 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:43:04 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 15:43:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:43:05 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 15:43:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:43:05 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 15:43:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:43:05 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 5 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:43:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:43:05 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 6 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:43:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:43:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:43:06 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Clearing basket with 2 items
2025-01-21 15:43:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        basket_id = ?
2025-01-21 15:43:06 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Successfully cleared basket
2025-01-21 15:43:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 15:43:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 15:43:06 [http-nio-8080-exec-1] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 15:43:06 [http-nio-8080-exec-1] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.postgresql.util.PSQLException: No value specified for parameter 2.], SQL: delete from basket_item where id=? and version=?
2025-01-21 15:43:06 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 22023
2025-01-21 15:43:06 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - No value specified for parameter 2.
2025-01-21 15:43:07 [http-nio-8080-exec-1] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.dao.DataIntegrityViolationException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]; SQL [delete from basket_item where id=? and version=?]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:293)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.DataException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:103)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:294)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 148 common frames omitted
Caused by: org.postgresql.util.PSQLException: No value specified for parameter 2.
	at org.postgresql.core.v3.SimpleParameterList.checkAllParametersSet(SimpleParameterList.java:284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:541)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:279)
	... 166 common frames omitted
2025-01-21 15:51:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:51:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:51:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:51:25 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 178896 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:51:25 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:51:25 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:51:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:51:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:51:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90 ms. Found 8 JPA repository interfaces.
2025-01-21 15:51:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:51:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:51:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-01-21 15:51:26 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:51:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:51:26 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:51:26 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:51:26 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:51:26 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1717 ms
2025-01-21 15:51:27 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:51:27 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:51:27 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:51:27 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:51:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:51:30 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68024e57
2025-01-21 15:51:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:51:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:51:31 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:51:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:51:47 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:51:49 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:51:49 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:51:49 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:51:49 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:51:50 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:51:50 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:51:50 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2ce8935d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55e3f582, org.springframework.security.web.context.SecurityContextHolderFilter@37840cfa, org.springframework.security.web.header.HeaderWriterFilter@7bd6d6c5, org.springframework.web.filter.CorsFilter@1eee6b5f, org.springframework.security.web.authentication.logout.LogoutFilter@6948f680, uz.pdp.config.filtr.MyFilter@1dac0784, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@518cd29, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ee3181d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3980412e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5419e14, org.springframework.security.web.access.ExceptionTranslationFilter@653b17be, org.springframework.security.web.access.intercept.AuthorizationFilter@6a4de574]
2025-01-21 15:51:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:51:51 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 26.366 seconds (process running for 26.684)
2025-01-21 15:51:51 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:51:51 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:51:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:51:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:51:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 15:51:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:51:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:51:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:51:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:51:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:51:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type,
        i1_0.version 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:51:54 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 15:51:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:51:55 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 15:51:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:51:55 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 15:51:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:51:55 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 7 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:51:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:51:55 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 8 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:51:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:51:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:51:56 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Clearing basket with 2 items
2025-01-21 15:51:56 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Successfully cleared basket
2025-01-21 15:51:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 15:51:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 15:51:56 [http-nio-8080-exec-1] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 15:51:56 [http-nio-8080-exec-1] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.postgresql.util.PSQLException: No value specified for parameter 2.], SQL: delete from basket_item where id=? and version=?
2025-01-21 15:51:56 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 22023
2025-01-21 15:51:56 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - No value specified for parameter 2.
2025-01-21 15:51:57 [http-nio-8080-exec-1] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.dao.DataIntegrityViolationException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]; SQL [delete from basket_item where id=? and version=?]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:293)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.DataException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:103)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:294)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 148 common frames omitted
Caused by: org.postgresql.util.PSQLException: No value specified for parameter 2.
	at org.postgresql.core.v3.SimpleParameterList.checkAllParametersSet(SimpleParameterList.java:284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:541)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:279)
	... 166 common frames omitted
2025-01-21 15:53:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:53:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:53:25 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:54:16 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 192997 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:54:16 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:54:16 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:54:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:54:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:54:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85 ms. Found 8 JPA repository interfaces.
2025-01-21 15:54:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:54:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:54:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 15:54:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:54:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:54:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:54:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:54:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:54:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1489 ms
2025-01-21 15:54:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:54:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:54:17 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:54:17 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:54:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:54:20 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c6653e
2025-01-21 15:54:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:54:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:54:22 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:54:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:54:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:54:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:54:41 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:54:41 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:54:41 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:54:41 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:54:41 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:54:41 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@473c849d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b710ce5, org.springframework.security.web.context.SecurityContextHolderFilter@ed2afe7, org.springframework.security.web.header.HeaderWriterFilter@25e531dd, org.springframework.web.filter.CorsFilter@3cf197bb, org.springframework.security.web.authentication.logout.LogoutFilter@16f4777d, uz.pdp.config.filtr.MyFilter@7f5ecada, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7e60c7e1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6989809f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b2faf08, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41f8c5cf, org.springframework.security.web.access.ExceptionTranslationFilter@60a8459b, org.springframework.security.web.access.intercept.AuthorizationFilter@1832ab0a]
2025-01-21 15:54:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:54:42 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 26.683 seconds (process running for 27.046)
2025-01-21 15:54:42 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:54:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:54:43 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:54:43 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:54:43 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 15:55:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:55:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:55:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:55:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:55:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:55:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type,
        i1_0.version 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:55:05 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 15:55:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:55:06 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 15:55:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:55:06 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 15:55:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:55:06 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 9 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:55:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:55:06 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 10 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:55:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:55:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:55:07 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Clearing basket with 2 items
2025-01-21 15:55:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        bi1_0.id,
        bi1_0.basket_id,
        bi1_0.image,
        bi1_0.item_id,
        bi1_0.name,
        bi1_0.price,
        bi1_0.quantity,
        bi1_0.type,
        bi1_0.version 
    from
        basket_item bi1_0 
    where
        bi1_0.basket_id=?
2025-01-21 15:55:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=?
2025-01-21 15:55:08 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Successfully cleared basket
2025-01-21 15:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 15:55:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 15:55:08 [http-nio-8080-exec-1] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 15:55:08 [http-nio-8080-exec-1] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.postgresql.util.PSQLException: No value specified for parameter 2.], SQL: delete from basket_item where id=? and version=?
2025-01-21 15:55:08 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 22023
2025-01-21 15:55:08 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - No value specified for parameter 2.
2025-01-21 15:55:08 [http-nio-8080-exec-1] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.dao.DataIntegrityViolationException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]; SQL [delete from basket_item where id=? and version=?]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:293)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.DataException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:103)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:294)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 148 common frames omitted
Caused by: org.postgresql.util.PSQLException: No value specified for parameter 2.
	at org.postgresql.core.v3.SimpleParameterList.checkAllParametersSet(SimpleParameterList.java:284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:541)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:279)
	... 166 common frames omitted
2025-01-21 15:55:57 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:55:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:55:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:56:01 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 201191 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:56:01 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:56:01 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:56:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:56:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:56:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 8 JPA repository interfaces.
2025-01-21 15:56:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:56:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:56:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 15:56:02 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:56:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:56:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:56:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:56:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:56:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1499 ms
2025-01-21 15:56:02 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:56:02 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:56:02 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:56:03 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:56:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:56:05 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@72321701
2025-01-21 15:56:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:56:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:56:07 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:56:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:56:24 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:56:24 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accessoryController' defined in file [/home/lantanium/Documents/G45-Project/target/classes/uz/pdp/controller/AccessoryController.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'basketService' defined in file [/home/lantanium/Documents/G45-Project/target/classes/uz/pdp/service/BasketService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'basketRepository' defined in uz.pdp.repository.BasketRepository defined in @EnableJpaRepositories declared on ProjectModul10Application: Could not create query for public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); Reason: Failed to create query for method public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); No property 'delete' found for type 'Basket'
2025-01-21 15:56:24 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:56:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:56:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:56:26 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-01-21 15:56:26 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-01-21 15:56:26 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'accessoryController' defined in file [/home/lantanium/Documents/G45-Project/target/classes/uz/pdp/controller/AccessoryController.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'basketService' defined in file [/home/lantanium/Documents/G45-Project/target/classes/uz/pdp/service/BasketService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'basketRepository' defined in uz.pdp.repository.BasketRepository defined in @EnableJpaRepositories declared on ProjectModul10Application: Could not create query for public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); Reason: Failed to create query for method public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); No property 'delete' found for type 'Basket'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347)
	at uz.pdp.projectmodul10.ProjectModul10Application.main(ProjectModul10Application.java:56)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'basketService' defined in file [/home/lantanium/Documents/G45-Project/target/classes/uz/pdp/service/BasketService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'basketRepository' defined in uz.pdp.repository.BasketRepository defined in @EnableJpaRepositories declared on ProjectModul10Application: Could not create query for public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); Reason: Failed to create query for method public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); No property 'delete' found for type 'Basket'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:802)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'basketRepository' defined in uz.pdp.repository.BasketRepository defined in @EnableJpaRepositories declared on ProjectModul10Application: Could not create query for public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); Reason: Failed to create query for method public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); No property 'delete' found for type 'Basket'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); Reason: Failed to create query for method public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); No property 'delete' found for type 'Basket'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract void uz.pdp.repository.BasketRepository.delete(uz.pdp.entity.BasketItem); No property 'delete' found for type 'Basket'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'delete' found for type 'Basket'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:443)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:419)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:372)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:354)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:100)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:100)
	... 60 common frames omitted
2025-01-21 15:57:53 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 210062 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:57:53 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:57:53 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:57:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:57:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:57:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 9 JPA repository interfaces.
2025-01-21 15:57:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:57:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:57:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-01-21 15:57:54 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:57:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:57:54 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:57:54 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:57:55 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:57:55 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1279 ms
2025-01-21 15:57:55 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:57:55 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:57:55 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:57:55 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:57:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:57:58 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41962299
2025-01-21 15:57:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:57:58 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:57:59 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:58:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:58:15 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 15:58:16 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 15:58:17 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 15:58:17 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 15:58:17 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 15:58:17 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 15:58:17 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 15:58:17 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@12304f31, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b2faf08, org.springframework.security.web.context.SecurityContextHolderFilter@1f4f299, org.springframework.security.web.header.HeaderWriterFilter@2cc107cc, org.springframework.web.filter.CorsFilter@50d866c6, org.springframework.security.web.authentication.logout.LogoutFilter@340bdd5c, uz.pdp.config.filtr.MyFilter@4eec5fa6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7c2600bb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74f9f6e0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10cd8b02, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2fca2914, org.springframework.security.web.access.ExceptionTranslationFilter@5c894a01, org.springframework.security.web.access.intercept.AuthorizationFilter@62237fd1]
2025-01-21 15:58:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 15:58:18 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.265 seconds (process running for 25.519)
2025-01-21 15:58:18 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:58:19 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 15:58:20 [RMI TCP Connection(3)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 15:58:20 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 15:58:20 [RMI TCP Connection(3)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 15:58:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:58:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:58:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:58:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:58:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type,
        i1_0.version 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 15:58:36 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 15:58:36 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 15:58:36 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 15:58:36 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:58:37 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 11 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:58:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 15:58:37 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 12 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 15:58:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 15:58:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 15:58:37 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Clearing basket with 2 items
2025-01-21 15:58:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        basket_id=?
2025-01-21 15:58:38 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Successfully cleared basket
2025-01-21 15:58:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 15:58:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 15:58:38 [http-nio-8080-exec-1] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 15:58:38 [http-nio-8080-exec-1] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.postgresql.util.PSQLException: No value specified for parameter 2.], SQL: delete from basket_item where id=? and version=?
2025-01-21 15:58:38 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 22023
2025-01-21 15:58:38 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - No value specified for parameter 2.
2025-01-21 15:58:38 [http-nio-8080-exec-1] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.dao.DataIntegrityViolationException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]; SQL [delete from basket_item where id=? and version=?]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:293)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.DataException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:103)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:294)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 148 common frames omitted
Caused by: org.postgresql.util.PSQLException: No value specified for parameter 2.
	at org.postgresql.core.v3.SimpleParameterList.checkAllParametersSet(SimpleParameterList.java:284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:541)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:279)
	... 166 common frames omitted
2025-01-21 15:59:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 15:59:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 15:59:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 15:59:38 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 218422 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 15:59:38 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 15:59:38 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 15:59:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:59:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 15:59:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 88 ms. Found 9 JPA repository interfaces.
2025-01-21 15:59:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 15:59:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 15:59:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 15:59:39 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 15:59:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 15:59:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 15:59:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 15:59:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 15:59:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1577 ms
2025-01-21 15:59:40 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 15:59:40 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 15:59:40 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 15:59:40 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 15:59:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 15:59:43 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5cfde2a4
2025-01-21 15:59:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 15:59:43 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 15:59:44 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 15:59:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 16:00:00 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 16:00:01 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 16:00:02 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 16:00:02 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 16:00:02 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 16:00:02 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 16:00:02 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 16:00:02 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@21f85317, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19a052a1, org.springframework.security.web.context.SecurityContextHolderFilter@2ce8935d, org.springframework.security.web.header.HeaderWriterFilter@54be94fd, org.springframework.web.filter.CorsFilter@2fc8a7b0, org.springframework.security.web.authentication.logout.LogoutFilter@71cf1015, uz.pdp.config.filtr.MyFilter@6c8672b9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@57c1b28e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3cdaeefd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@514d8a82, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e5d8e1a, org.springframework.security.web.access.ExceptionTranslationFilter@7c3b6e89, org.springframework.security.web.access.intercept.AuthorizationFilter@1a56a6c6]
2025-01-21 16:00:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 16:00:03 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.635 seconds (process running for 25.942)
2025-01-21 16:00:04 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 16:00:04 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:00:05 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 16:00:05 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 16:00:05 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-01-21 16:00:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:00:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:00:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:00:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 16:00:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:00:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type,
        i1_0.version 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 16:00:07 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 16:00:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 16:00:08 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 16:00:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 16:00:08 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 16:00:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 16:00:08 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 13 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 16:00:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 16:00:08 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 14 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 16:00:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:00:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 16:00:09 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Clearing basket with 2 items
2025-01-21 16:00:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        basket_id = ?
2025-01-21 16:00:09 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Successfully cleared basket
2025-01-21 16:00:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 16:00:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 16:00:10 [http-nio-8080-exec-1] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 16:00:10 [http-nio-8080-exec-1] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.postgresql.util.PSQLException: No value specified for parameter 2.], SQL: delete from basket_item where id=? and version=?
2025-01-21 16:00:10 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 22023
2025-01-21 16:00:10 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - No value specified for parameter 2.
2025-01-21 16:00:10 [http-nio-8080-exec-1] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.dao.DataIntegrityViolationException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]; SQL [delete from basket_item where id=? and version=?]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:293)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.DataException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:103)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:294)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 148 common frames omitted
Caused by: org.postgresql.util.PSQLException: No value specified for parameter 2.
	at org.postgresql.core.v3.SimpleParameterList.checkAllParametersSet(SimpleParameterList.java:284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:541)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:279)
	... 166 common frames omitted
2025-01-21 16:01:13 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 16:01:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 16:01:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 16:02:47 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 233487 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 16:02:47 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 16:02:47 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 16:02:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 16:02:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 16:02:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 102 ms. Found 9 JPA repository interfaces.
2025-01-21 16:02:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 16:02:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 16:02:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 16:02:49 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 16:02:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 16:02:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 16:02:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 16:02:49 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 16:02:49 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1649 ms
2025-01-21 16:02:49 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 16:02:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 16:02:49 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 16:02:49 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 16:02:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 16:02:52 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58e0d1ac
2025-01-21 16:02:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 16:02:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 16:02:54 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 16:03:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 16:03:11 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 16:03:13 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 16:03:13 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 16:03:13 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 16:03:13 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 16:03:14 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 16:03:14 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 16:03:14 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5a61a7d2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c05cfdc, org.springframework.security.web.context.SecurityContextHolderFilter@326f7766, org.springframework.security.web.header.HeaderWriterFilter@42add6ba, org.springframework.web.filter.CorsFilter@443ea9c5, org.springframework.security.web.authentication.logout.LogoutFilter@24682160, uz.pdp.config.filtr.MyFilter@43f7f48d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5df429f8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@254b365f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ddadccf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c12112b, org.springframework.security.web.access.ExceptionTranslationFilter@5b710ce5, org.springframework.security.web.access.intercept.AuthorizationFilter@5fbbd42d]
2025-01-21 16:03:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 16:03:14 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 27.571 seconds (process running for 27.935)
2025-01-21 16:03:15 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 16:03:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:03:16 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 16:03:16 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 16:03:16 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 16:03:21 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 447 ms
2025-01-21 16:03:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:03:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:03:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 16:03:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:03:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type,
        i1_0.version 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 16:03:28 [http-nio-8080-exec-6] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 16:03:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 16:03:29 [http-nio-8080-exec-6] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 16:03:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 16:03:29 [http-nio-8080-exec-6] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 16:03:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 16:03:29 [http-nio-8080-exec-6] INFO  uz.pdp.service.OrderService - Created order 15 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 16:03:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 16:03:29 [http-nio-8080-exec-6] INFO  uz.pdp.service.OrderService - Created order 16 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 16:03:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:03:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 16:03:30 [http-nio-8080-exec-6] DEBUG uz.pdp.service.BasketService - Clearing basket with 2 items
2025-01-21 16:03:30 [http-nio-8080-exec-6] ERROR uz.pdp.service.BasketService - Error clearing basket: Detached entity with generated id '1' has an uninitialized version value 'null' : uz.pdp.entity.BasketItem.version
org.springframework.dao.DataIntegrityViolationException: Detached entity with generated id '1' has an uninitialized version value 'null' : uz.pdp.entity.BasketItem.version
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:307)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy218.deleteByBasketId(Unknown Source)
	at uz.pdp.service.BasketService.clearBasket(BasketService.java:183)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.clearBasket(<generated>)
	at uz.pdp.controller.BasketController.checkout(BasketController.java:243)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.PropertyValueException: Detached entity with generated id '1' has an uninitialized version value 'null' : uz.pdp.entity.BasketItem.version
	at org.hibernate.persister.entity.AbstractEntityPersister.isTransient(AbstractEntityPersister.java:4135)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:293)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:62)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityState(DefaultPersistEventListener.java:112)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:85)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138)
	at org.hibernate.internal.SessionImpl.persistOnFlush(SessionImpl.java:838)
	at org.hibernate.engine.spi.CascadingActions$8.cascade(CascadingActions.java:333)
	at org.hibernate.engine.spi.CascadingActions$8.cascade(CascadingActions.java:323)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:551)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:481)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:442)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:161)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:144)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:79)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1409)
	at org.hibernate.query.sql.internal.NativeQueryImpl.prepareForExecution(NativeQueryImpl.java:596)
	at org.hibernate.query.spi.AbstractSelectionQuery.beforeQuery(AbstractSelectionQuery.java:461)
	at org.hibernate.query.spi.AbstractSelectionQuery.beforeQueryHandlingFetchProfiles(AbstractSelectionQuery.java:446)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:266)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 178 common frames omitted
2025-01-21 16:03:30 [http-nio-8080-exec-6] ERROR uz.pdp.controller.BasketController - Checkout failed: Failed to clear basket: Detached entity with generated id '1' has an uninitialized version value 'null' : uz.pdp.entity.BasketItem.version
java.lang.RuntimeException: Failed to clear basket: Detached entity with generated id '1' has an uninitialized version value 'null' : uz.pdp.entity.BasketItem.version
	at uz.pdp.service.BasketService.clearBasket(BasketService.java:193)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.service.BasketService$$SpringCGLIB$$0.clearBasket(<generated>)
	at uz.pdp.controller.BasketController.checkout(BasketController.java:243)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.dao.DataIntegrityViolationException: Detached entity with generated id '1' has an uninitialized version value 'null' : uz.pdp.entity.BasketItem.version
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:307)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy218.deleteByBasketId(Unknown Source)
	at uz.pdp.service.BasketService.clearBasket(BasketService.java:183)
	... 170 common frames omitted
Caused by: org.hibernate.PropertyValueException: Detached entity with generated id '1' has an uninitialized version value 'null' : uz.pdp.entity.BasketItem.version
	at org.hibernate.persister.entity.AbstractEntityPersister.isTransient(AbstractEntityPersister.java:4135)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:293)
	at org.hibernate.event.internal.EntityState.getEntityState(EntityState.java:62)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityState(DefaultPersistEventListener.java:112)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:85)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138)
	at org.hibernate.internal.SessionImpl.persistOnFlush(SessionImpl.java:838)
	at org.hibernate.engine.spi.CascadingActions$8.cascade(CascadingActions.java:333)
	at org.hibernate.engine.spi.CascadingActions$8.cascade(CascadingActions.java:323)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:517)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:439)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:551)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:481)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:442)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:224)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:157)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:161)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:144)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:79)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1409)
	at org.hibernate.query.sql.internal.NativeQueryImpl.prepareForExecution(NativeQueryImpl.java:596)
	at org.hibernate.query.spi.AbstractSelectionQuery.beforeQuery(AbstractSelectionQuery.java:461)
	at org.hibernate.query.spi.AbstractSelectionQuery.beforeQueryHandlingFetchProfiles(AbstractSelectionQuery.java:446)
	at org.hibernate.query.spi.AbstractQuery.executeUpdate(AbstractQuery.java:647)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:266)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 178 common frames omitted
2025-01-21 16:03:30 [http-nio-8080-exec-6] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:803)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-01-21 16:04:29 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 16:04:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 16:04:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 16:04:33 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 242321 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 16:04:33 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 16:04:33 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 16:04:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 16:04:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 16:04:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 9 JPA repository interfaces.
2025-01-21 16:04:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 16:04:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 16:04:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-01-21 16:04:34 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 16:04:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 16:04:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 16:04:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 16:04:34 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 16:04:34 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1427 ms
2025-01-21 16:04:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 16:04:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 16:04:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 16:04:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 16:04:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 16:04:38 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4b74a4d
2025-01-21 16:04:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 16:04:38 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 16:04:40 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 16:04:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 16:04:56 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 16:04:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 16:04:58 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 16:04:58 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 16:04:58 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 16:04:59 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 16:04:59 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 16:04:59 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@74bd4843, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@597185b8, org.springframework.security.web.context.SecurityContextHolderFilter@49401c88, org.springframework.security.web.header.HeaderWriterFilter@40deaa52, org.springframework.web.filter.CorsFilter@768857a1, org.springframework.security.web.authentication.logout.LogoutFilter@759bcd7d, uz.pdp.config.filtr.MyFilter@3966c679, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@714b8ede, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b79ee80, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25cac220, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4bf814fb, org.springframework.security.web.access.ExceptionTranslationFilter@69815c50, org.springframework.security.web.access.intercept.AuthorizationFilter@3c4ed31b]
2025-01-21 16:04:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 16:04:59 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 27.087 seconds (process running for 27.424)
2025-01-21 16:04:59 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:05:00 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 16:05:01 [RMI TCP Connection(1)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 16:05:01 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 16:05:01 [RMI TCP Connection(1)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-21 16:05:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:05:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:05:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 16:05:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type,
        i1_0.version 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 16:05:04 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 16:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 16:05:04 [http-nio-8080-exec-1] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 16:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 16:05:05 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 16:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 16:05:05 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 17 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 16:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 16:05:05 [http-nio-8080-exec-1] INFO  uz.pdp.service.OrderService - Created order 18 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 16:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 16:05:06 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Clearing basket with 2 items
2025-01-21 16:05:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        basket_id = ?
2025-01-21 16:05:06 [http-nio-8080-exec-1] DEBUG uz.pdp.service.BasketService - Successfully cleared basket
2025-01-21 16:05:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 16:05:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        basket_item 
    where
        id=? 
        and version=?
2025-01-21 16:05:06 [http-nio-8080-exec-1] INFO  org.hibernate.orm.jdbc.batch - HHH100503: On release of batch it still contained JDBC statements
2025-01-21 16:05:06 [http-nio-8080-exec-1] ERROR org.hibernate.orm.jdbc.batch - HHH100501: Exception executing batch [org.postgresql.util.PSQLException: No value specified for parameter 2.], SQL: delete from basket_item where id=? and version=?
2025-01-21 16:05:06 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 22023
2025-01-21 16:05:06 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - No value specified for parameter 2.
2025-01-21 16:05:06 [http-nio-8080-exec-1] ERROR u.p.exception.GlobalExceptionHandler - Unexpected error occurred
org.springframework.dao.DataIntegrityViolationException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]; SQL [delete from basket_item where id=? and version=?]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:293)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:794)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at uz.pdp.controller.BasketController$$SpringCGLIB$$0.checkout(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:213)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at uz.pdp.config.filtr.MyFilter.doFilter(MyFilter.java:43)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.hibernate.exception.DataException: could not execute batch [No value specified for parameter 2.] [delete from basket_item where id=? and version=?]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:103)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:294)
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupSingleTable.forEachStatement(PreparedStatementGroupSingleTable.java:59)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.performExecution(BatchImpl.java:264)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.execute(BatchImpl.java:242)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.executeBatch(JdbcCoordinatorImpl.java:188)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:662)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:363)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1423)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:504)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2339)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1996)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 148 common frames omitted
Caused by: org.postgresql.util.PSQLException: No value specified for parameter 2.
	at org.postgresql.core.v3.SimpleParameterList.checkAllParametersSet(SimpleParameterList.java:284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:541)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1685)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.batch.internal.BatchImpl.lambda$performExecution$2(BatchImpl.java:279)
	... 166 common frames omitted
2025-01-21 16:06:19 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 16:06:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-21 16:06:20 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-21 16:09:57 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.13 with PID 267987 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-21 16:09:57 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-21 16:09:57 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-21 16:09:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 16:09:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-21 16:09:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 9 JPA repository interfaces.
2025-01-21 16:09:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-21 16:09:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-21 16:09:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-01-21 16:09:58 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-21 16:09:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-21 16:09:59 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-21 16:09:59 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-21 16:09:59 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-21 16:09:59 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1325 ms
2025-01-21 16:09:59 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-21 16:09:59 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-21 16:09:59 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-21 16:09:59 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-21 16:09:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-21 16:10:02 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39f3285d
2025-01-21 16:10:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-21 16:10:02 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-21 16:10:03 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-21 16:10:19 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-21 16:10:19 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-21 16:10:21 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-21 16:10:21 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-21 16:10:21 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-21 16:10:21 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-21 16:10:22 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-21 16:10:22 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-21 16:10:22 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@25f2d73b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@214629a9, org.springframework.security.web.context.SecurityContextHolderFilter@2ab655fc, org.springframework.security.web.header.HeaderWriterFilter@60e76b0f, org.springframework.web.filter.CorsFilter@10b2d14e, org.springframework.security.web.authentication.logout.LogoutFilter@20054016, uz.pdp.config.filtr.MyFilter@3ef914f5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7365d12b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60cbdd84, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34f3153a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f64a692, org.springframework.security.web.access.ExceptionTranslationFilter@267d2d02, org.springframework.security.web.access.intercept.AuthorizationFilter@61254a73]
2025-01-21 16:10:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-21 16:10:23 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 25.659 seconds (process running for 26.003)
2025-01-21 16:10:23 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-21 16:10:24 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:10:24 [RMI TCP Connection(4)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-21 16:10:24 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-21 16:10:24 [RMI TCP Connection(4)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-01-21 16:10:31 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 520 ms
2025-01-21 16:10:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:10:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:10:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 16:10:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:10:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type,
        i1_0.version 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 16:10:40 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieving door with ID: 1
2025-01-21 16:10:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 16:10:40 [http-nio-8080-exec-4] INFO  uz.pdp.service.DoorService - Retrieved door: Vintage Fantastic Reinforced Steel Door
2025-01-21 16:10:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        fd1_0.id,
        fd1_0.description,
        fd1_0.dimensions,
        fd1_0.furniture_type,
        fd1_0.material,
        fd1_0.name,
        fd1_0.price,
        fd1_0.stock_quantity 
    from
        furniture_doors fd1_0 
    where
        fd1_0.id=?
2025-01-21 16:10:41 [http-nio-8080-exec-4] INFO  uz.pdp.service.OrderService - Creating 2 orders for user ID: 3
2025-01-21 16:10:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 16:10:41 [http-nio-8080-exec-4] INFO  uz.pdp.service.OrderService - Created order 19 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 16:10:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        orders
        (comment, contact_phone, customer_name, delivery_address, delivery_notes, door_id, email, installation_notes, order_date, order_type, preferred_delivery_time, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-01-21 16:10:41 [http-nio-8080-exec-4] INFO  uz.pdp.service.OrderService - Created order 20 for door Vintage Fantastic Reinforced Steel Door
2025-01-21 16:10:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:10:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 16:10:42 [http-nio-8080-exec-4] INFO  uz.pdp.service.BasketService - Clearing basket with ID: 1 containing 2 items
2025-01-21 16:10:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    DELETE 
    FROM
        basket_item 
    WHERE
        basket_id = ?
2025-01-21 16:10:42 [http-nio-8080-exec-4] INFO  uz.pdp.service.BasketService - Successfully cleared all items from basket 1
2025-01-21 16:10:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 16:10:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.id=?
2025-01-21 16:11:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:11:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:11:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.user_id 
    from
        basket b1_0 
    left join
        users u1_0 
            on u1_0.id=b1_0.user_id 
    where
        u1_0.id=?
2025-01-21 16:11:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.basket_id,
        i1_0.id,
        i1_0.image,
        i1_0.item_id,
        i1_0.name,
        i1_0.price,
        i1_0.quantity,
        i1_0.type,
        i1_0.version 
    from
        basket_item i1_0 
    where
        i1_0.basket_id=?
2025-01-21 16:11:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-21 16:11:19 [http-nio-8080-exec-3] INFO  uz.pdp.controller.UserController - Retrieving orders for user ID: 3
2025-01-21 16:11:19 [http-nio-8080-exec-3] INFO  uz.pdp.service.OrderService - Retrieving orders for user ID: 3
2025-01-21 16:11:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.id=?
2025-01-21 16:11:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        o1_0.id,
        o1_0.comment,
        o1_0.contact_phone,
        o1_0.customer_name,
        o1_0.delivery_address,
        o1_0.delivery_notes,
        o1_0.door_id,
        o1_0.email,
        o1_0.installation_notes,
        o1_0.order_date,
        o1_0.order_type,
        o1_0.preferred_delivery_time,
        o1_0.status,
        o1_0.user_id 
    from
        orders o1_0 
    where
        o1_0.user_id=? 
    order by
        o1_0.order_date desc
2025-01-21 16:11:20 [http-nio-8080-exec-3] INFO  uz.pdp.service.OrderService - Retrieved 6 orders for user ID: 3
2025-01-21 16:11:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.active,
        d1_0.color,
        d1_0.custom_height,
        d1_0.custom_width,
        d1_0.description,
        d1_0.final_price,
        d1_0.is_custom_color,
        d1_0.manufacturer,
        d1_0.material,
        d1_0.name,
        d1_0.price,
        d1_0.seller_id,
        d1_0.size,
        d1_0.status,
        d1_0.warranty_years 
    from
        doors d1_0 
    where
        d1_0.id=?
2025-01-21 16:11:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.door_id,
        i1_0.images 
    from
        door_images i1_0 
    where
        i1_0.door_id=?
2025-01-21 16:11:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.id=?
