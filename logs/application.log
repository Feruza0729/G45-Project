2025-01-26 16:21:02 [main] INFO  u.p.p.ProjectModul10Application - Starting ProjectModul10Application using Java 17.0.14 with PID 850017 (/home/lantanium/Documents/G45-Project/target/classes started by lantanium in /home/lantanium/Documents/G45-Project)
2025-01-26 16:21:02 [main] DEBUG u.p.p.ProjectModul10Application - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-01-26 16:21:02 [main] INFO  u.p.p.ProjectModul10Application - No active profile set, falling back to 1 default profile: "default"
2025-01-26 16:21:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-26 16:21:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-26 16:21:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 145 ms. Found 12 JPA repository interfaces.
2025-01-26 16:21:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-01-26 16:21:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-01-26 16:21:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2025-01-26 16:21:04 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'webMvcConfig' of type [uz.pdp.config.WebMvcConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [methodValidationPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-26 16:21:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-01-26 16:21:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-26 16:21:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-01-26 16:21:05 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-26 16:21:05 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2332 ms
2025-01-26 16:21:05 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-26 16:21:05 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-01-26 16:21:05 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-26 16:21:06 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-26 16:21:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-26 16:21:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4e77f29e
2025-01-26 16:21:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-26 16:21:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-26 16:21:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-26 16:21:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists moulding 
       add column description varchar(255)
2025-01-26 16:21:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists moulding 
       add column price_overall float(53)
2025-01-26 16:21:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists moulding 
       add column quantity integer
2025-01-26 16:21:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists moulding 
       add column title varchar(255)
2025-01-26 16:21:13 [main] DEBUG org.hibernate.SQL - 
    create table moulding_images_url (
        moulding_id bigint not null,
        images_url varchar(255)
    )
2025-01-26 16:21:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists idx_user_email
2025-01-26 16:21:14 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-01-26 16:21:14 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "idx_user_email" of relation "users" does not exist, skipping
2025-01-26 16:21:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint idx_user_email unique (email)
2025-01-26 16:21:29 [main] DEBUG org.hibernate.SQL - 
    alter table if exists moulding_images_url 
       add constraint FKswqq9v4mjojuw9atmjw5y623d 
       foreign key (moulding_id) 
       references moulding
2025-01-26 16:21:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-26 16:21:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-26 16:21:33 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-26 16:21:34 [main] INFO  o.s.g.e.DefaultSchemaResourceGraphQlSourceBuilder - Loaded 1 resource(s) in the GraphQL schema.
2025-01-26 16:21:34 [main] INFO  o.s.b.a.g.GraphQlAutoConfiguration - GraphQL schema inspection:
	Unmapped fields: {Query=[door, doors, user, address, addresses, searchAddresses, nearestAddress, doorHistory, order, userOrders, userAddresses], Mutation=[configureDoor, updateProfile, approveSeller, deactivateAccount, createOrder, updateOrderStatus, addAddress], Address=[country, zipCode], Subscription=[orderStatusChanged, newDoorAdded]}
	Unmapped registrations: {Query.getDoorById=DoorGraphQLController#getDoorById[1 args], Query.getAddressById=AddressGraphQLController#getAddressById[1 args], Query.getRecentHistory=DoorHistoryGraphQLController#getRecentHistory[1 args], Query.getAddressesByCity=AddressGraphQLController#getAddressesByCity[1 args], Query.getUserDoorHistory=DoorHistoryGraphQLController#getUserDoorHistory[2 args], Query.getDoorHistory=DoorHistoryGraphQLController#getDoorHistory[1 args], Query.getAllDoors=DoorGraphQLController#getAllDoors[0 args], Query.getAllAddresses=AddressGraphQLController#getAllAddresses[0 args], Query.getUserHistory=DoorHistoryGraphQLController#getUserHistory[1 args], Mutation.updateDoorStatus=DoorGraphQLController#updateDoorStatus[3 args], Mutation.validateAddress=AddressGraphQLController#validateAddress[1 args]}
	Skipped types: []
2025-01-26 16:21:34 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint HTTP POST /graphql
2025-01-26 16:21:34 [main] INFO  o.s.b.a.g.s.GraphQlWebMvcAutoConfiguration - GraphQL endpoint WebSocket /graphql-ws
2025-01-26 16:21:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 26 endpoint(s) beneath base path '/actuator'
2025-01-26 16:21:35 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@86639f2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17068ee8, org.springframework.security.web.context.SecurityContextHolderFilter@712c8e89, org.springframework.security.web.header.HeaderWriterFilter@6bc7c67f, org.springframework.web.filter.CorsFilter@40f12892, org.springframework.security.web.authentication.logout.LogoutFilter@4458e8ff, uz.pdp.config.filtr.MyFilter@7ce4498f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@54201c6b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50cc77f0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@151c510e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38e1aaa1, org.springframework.security.web.access.ExceptionTranslationFilter@6536f06c, org.springframework.security.web.access.intercept.AuthorizationFilter@5d4f3907]
2025-01-26 16:21:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-01-26 16:21:36 [main] INFO  u.p.p.ProjectModul10Application - Started ProjectModul10Application in 33.894 seconds (process running for 34.376)
2025-01-26 16:21:36 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        doors d1_0
2025-01-26 16:21:37 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-26 16:21:37 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-26 16:21:37 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-01-26 16:21:37 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:21:38 [http-nio-8080-exec-2] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1093 ms
2025-01-26 16:21:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:21:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.article,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.price_overall,
        m1_0.quantity,
        m1_0.size,
        m1_0.title 
    from
        moulding m1_0
2025-01-26 16:22:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        moulding
        (article, description, name, price, price_overall, quantity, size, title) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-26 16:22:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        moulding_images_url
        (moulding_id, images_url) 
    values
        (?, ?)
2025-01-26 16:22:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:22:12 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.article,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.price_overall,
        m1_0.quantity,
        m1_0.size,
        m1_0.title 
    from
        moulding m1_0
2025-01-26 16:22:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        iu1_0.moulding_id,
        iu1_0.images_url 
    from
        moulding_images_url iu1_0 
    where
        iu1_0.moulding_id=?
2025-01-26 16:22:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:22:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.article,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.price_overall,
        m1_0.quantity,
        m1_0.size,
        m1_0.title 
    from
        moulding m1_0 
    where
        m1_0.id=?
2025-01-26 16:22:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        iu1_0.moulding_id,
        iu1_0.images_url 
    from
        moulding_images_url iu1_0 
    where
        iu1_0.moulding_id=?
2025-01-26 16:22:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:22:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.article,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.price_overall,
        m1_0.quantity,
        m1_0.size,
        m1_0.title 
    from
        moulding m1_0 
    where
        m1_0.id=?
2025-01-26 16:22:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:22:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.article,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.price_overall,
        m1_0.quantity,
        m1_0.size,
        m1_0.title 
    from
        moulding m1_0 
    where
        m1_0.id=?
2025-01-26 16:22:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    delete 
    from
        moulding_images_url 
    where
        moulding_id=?
2025-01-26 16:22:35 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    delete 
    from
        moulding 
    where
        id=?
2025-01-26 16:22:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:22:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.article,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.price_overall,
        m1_0.quantity,
        m1_0.size,
        m1_0.title 
    from
        moulding m1_0
2025-01-26 16:22:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:22:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        moulding
        (article, description, name, price, price_overall, quantity, size, title) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-01-26 16:22:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        moulding_images_url
        (moulding_id, images_url) 
    values
        (?, ?)
2025-01-26 16:23:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:23:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.article,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.price_overall,
        m1_0.quantity,
        m1_0.size,
        m1_0.title 
    from
        moulding m1_0 
    where
        m1_0.id=?
2025-01-26 16:23:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:23:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.article,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.price_overall,
        m1_0.quantity,
        m1_0.size,
        m1_0.title 
    from
        moulding m1_0
2025-01-26 16:23:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        iu1_0.moulding_id,
        iu1_0.images_url 
    from
        moulding_images_url iu1_0 
    where
        iu1_0.moulding_id=?
2025-01-26 16:23:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.email,
        u1_0.lastname,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.role,
        u1_0.seller_request_pending 
    from
        users u1_0 
    where
        u1_0.name=? 
        and u1_0.active=true
2025-01-26 16:23:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.article,
        m1_0.description,
        m1_0.name,
        m1_0.price,
        m1_0.price_overall,
        m1_0.quantity,
        m1_0.size,
        m1_0.title 
    from
        moulding m1_0 
    where
        m1_0.id=?
2025-01-26 16:23:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    delete 
    from
        moulding_images_url 
    where
        moulding_id=?
2025-01-26 16:23:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        moulding_images_url
        (moulding_id, images_url) 
    values
        (?, ?)
